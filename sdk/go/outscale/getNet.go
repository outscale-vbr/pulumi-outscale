// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"github.com/outscale-vbr/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupNet(ctx *pulumi.Context, args *LookupNetArgs, opts ...pulumi.InvokeOption) (*LookupNetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNetResult
	err := ctx.Invoke("outscale:index/getNet:getNet", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNet.
type LookupNetArgs struct {
	Filters []GetNetFilter `pulumi:"filters"`
	NetId   *string        `pulumi:"netId"`
}

// A collection of values returned by getNet.
type LookupNetResult struct {
	DhcpOptionsSetId string         `pulumi:"dhcpOptionsSetId"`
	Filters          []GetNetFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id        string      `pulumi:"id"`
	IpRange   string      `pulumi:"ipRange"`
	NetId     string      `pulumi:"netId"`
	RequestId string      `pulumi:"requestId"`
	State     string      `pulumi:"state"`
	Tags      []GetNetTag `pulumi:"tags"`
	Tenancy   string      `pulumi:"tenancy"`
}

func LookupNetOutput(ctx *pulumi.Context, args LookupNetOutputArgs, opts ...pulumi.InvokeOption) LookupNetResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupNetResult, error) {
			args := v.(LookupNetArgs)
			r, err := LookupNet(ctx, &args, opts...)
			var s LookupNetResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupNetResultOutput)
}

// A collection of arguments for invoking getNet.
type LookupNetOutputArgs struct {
	Filters GetNetFilterArrayInput `pulumi:"filters"`
	NetId   pulumi.StringPtrInput  `pulumi:"netId"`
}

func (LookupNetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetArgs)(nil)).Elem()
}

// A collection of values returned by getNet.
type LookupNetResultOutput struct{ *pulumi.OutputState }

func (LookupNetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetResult)(nil)).Elem()
}

func (o LookupNetResultOutput) ToLookupNetResultOutput() LookupNetResultOutput {
	return o
}

func (o LookupNetResultOutput) ToLookupNetResultOutputWithContext(ctx context.Context) LookupNetResultOutput {
	return o
}

func (o LookupNetResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupNetResult] {
	return pulumix.Output[LookupNetResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupNetResultOutput) DhcpOptionsSetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetResult) string { return v.DhcpOptionsSetId }).(pulumi.StringOutput)
}

func (o LookupNetResultOutput) Filters() GetNetFilterArrayOutput {
	return o.ApplyT(func(v LookupNetResult) []GetNetFilter { return v.Filters }).(GetNetFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupNetResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupNetResultOutput) IpRange() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetResult) string { return v.IpRange }).(pulumi.StringOutput)
}

func (o LookupNetResultOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetResult) string { return v.NetId }).(pulumi.StringOutput)
}

func (o LookupNetResultOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetResult) string { return v.RequestId }).(pulumi.StringOutput)
}

func (o LookupNetResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupNetResultOutput) Tags() GetNetTagArrayOutput {
	return o.ApplyT(func(v LookupNetResult) []GetNetTag { return v.Tags }).(GetNetTagArrayOutput)
}

func (o LookupNetResultOutput) Tenancy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetResult) string { return v.Tenancy }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNetResultOutput{})
}
