// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"errors"
	"github.com/outscale-vbr/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type SnapshotAttributes struct {
	pulumi.CustomResourceState

	AccountId                          pulumi.StringOutput                                           `pulumi:"accountId"`
	PermissionsToCreateVolumeAdditions SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput `pulumi:"permissionsToCreateVolumeAdditions"`
	PermissionsToCreateVolumeRemovals  SnapshotAttributesPermissionsToCreateVolumeRemovalArrayOutput `pulumi:"permissionsToCreateVolumeRemovals"`
	RequestId                          pulumi.StringOutput                                           `pulumi:"requestId"`
	SnapshotId                         pulumi.StringOutput                                           `pulumi:"snapshotId"`
}

// NewSnapshotAttributes registers a new resource with the given unique name, arguments, and options.
func NewSnapshotAttributes(ctx *pulumi.Context,
	name string, args *SnapshotAttributesArgs, opts ...pulumi.ResourceOption) (*SnapshotAttributes, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SnapshotId == nil {
		return nil, errors.New("invalid value for required argument 'SnapshotId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SnapshotAttributes
	err := ctx.RegisterResource("outscale:index/snapshotAttributes:SnapshotAttributes", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSnapshotAttributes gets an existing SnapshotAttributes resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSnapshotAttributes(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SnapshotAttributesState, opts ...pulumi.ResourceOption) (*SnapshotAttributes, error) {
	var resource SnapshotAttributes
	err := ctx.ReadResource("outscale:index/snapshotAttributes:SnapshotAttributes", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SnapshotAttributes resources.
type snapshotAttributesState struct {
	AccountId                          *string                                               `pulumi:"accountId"`
	PermissionsToCreateVolumeAdditions *SnapshotAttributesPermissionsToCreateVolumeAdditions `pulumi:"permissionsToCreateVolumeAdditions"`
	PermissionsToCreateVolumeRemovals  []SnapshotAttributesPermissionsToCreateVolumeRemoval  `pulumi:"permissionsToCreateVolumeRemovals"`
	RequestId                          *string                                               `pulumi:"requestId"`
	SnapshotId                         *string                                               `pulumi:"snapshotId"`
}

type SnapshotAttributesState struct {
	AccountId                          pulumi.StringPtrInput
	PermissionsToCreateVolumeAdditions SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrInput
	PermissionsToCreateVolumeRemovals  SnapshotAttributesPermissionsToCreateVolumeRemovalArrayInput
	RequestId                          pulumi.StringPtrInput
	SnapshotId                         pulumi.StringPtrInput
}

func (SnapshotAttributesState) ElementType() reflect.Type {
	return reflect.TypeOf((*snapshotAttributesState)(nil)).Elem()
}

type snapshotAttributesArgs struct {
	PermissionsToCreateVolumeAdditions *SnapshotAttributesPermissionsToCreateVolumeAdditions `pulumi:"permissionsToCreateVolumeAdditions"`
	PermissionsToCreateVolumeRemovals  []SnapshotAttributesPermissionsToCreateVolumeRemoval  `pulumi:"permissionsToCreateVolumeRemovals"`
	SnapshotId                         string                                                `pulumi:"snapshotId"`
}

// The set of arguments for constructing a SnapshotAttributes resource.
type SnapshotAttributesArgs struct {
	PermissionsToCreateVolumeAdditions SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrInput
	PermissionsToCreateVolumeRemovals  SnapshotAttributesPermissionsToCreateVolumeRemovalArrayInput
	SnapshotId                         pulumi.StringInput
}

func (SnapshotAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*snapshotAttributesArgs)(nil)).Elem()
}

type SnapshotAttributesInput interface {
	pulumi.Input

	ToSnapshotAttributesOutput() SnapshotAttributesOutput
	ToSnapshotAttributesOutputWithContext(ctx context.Context) SnapshotAttributesOutput
}

func (*SnapshotAttributes) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotAttributes)(nil)).Elem()
}

func (i *SnapshotAttributes) ToSnapshotAttributesOutput() SnapshotAttributesOutput {
	return i.ToSnapshotAttributesOutputWithContext(context.Background())
}

func (i *SnapshotAttributes) ToSnapshotAttributesOutputWithContext(ctx context.Context) SnapshotAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotAttributesOutput)
}

func (i *SnapshotAttributes) ToOutput(ctx context.Context) pulumix.Output[*SnapshotAttributes] {
	return pulumix.Output[*SnapshotAttributes]{
		OutputState: i.ToSnapshotAttributesOutputWithContext(ctx).OutputState,
	}
}

// SnapshotAttributesArrayInput is an input type that accepts SnapshotAttributesArray and SnapshotAttributesArrayOutput values.
// You can construct a concrete instance of `SnapshotAttributesArrayInput` via:
//
//	SnapshotAttributesArray{ SnapshotAttributesArgs{...} }
type SnapshotAttributesArrayInput interface {
	pulumi.Input

	ToSnapshotAttributesArrayOutput() SnapshotAttributesArrayOutput
	ToSnapshotAttributesArrayOutputWithContext(context.Context) SnapshotAttributesArrayOutput
}

type SnapshotAttributesArray []SnapshotAttributesInput

func (SnapshotAttributesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SnapshotAttributes)(nil)).Elem()
}

func (i SnapshotAttributesArray) ToSnapshotAttributesArrayOutput() SnapshotAttributesArrayOutput {
	return i.ToSnapshotAttributesArrayOutputWithContext(context.Background())
}

func (i SnapshotAttributesArray) ToSnapshotAttributesArrayOutputWithContext(ctx context.Context) SnapshotAttributesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotAttributesArrayOutput)
}

func (i SnapshotAttributesArray) ToOutput(ctx context.Context) pulumix.Output[[]*SnapshotAttributes] {
	return pulumix.Output[[]*SnapshotAttributes]{
		OutputState: i.ToSnapshotAttributesArrayOutputWithContext(ctx).OutputState,
	}
}

// SnapshotAttributesMapInput is an input type that accepts SnapshotAttributesMap and SnapshotAttributesMapOutput values.
// You can construct a concrete instance of `SnapshotAttributesMapInput` via:
//
//	SnapshotAttributesMap{ "key": SnapshotAttributesArgs{...} }
type SnapshotAttributesMapInput interface {
	pulumi.Input

	ToSnapshotAttributesMapOutput() SnapshotAttributesMapOutput
	ToSnapshotAttributesMapOutputWithContext(context.Context) SnapshotAttributesMapOutput
}

type SnapshotAttributesMap map[string]SnapshotAttributesInput

func (SnapshotAttributesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SnapshotAttributes)(nil)).Elem()
}

func (i SnapshotAttributesMap) ToSnapshotAttributesMapOutput() SnapshotAttributesMapOutput {
	return i.ToSnapshotAttributesMapOutputWithContext(context.Background())
}

func (i SnapshotAttributesMap) ToSnapshotAttributesMapOutputWithContext(ctx context.Context) SnapshotAttributesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SnapshotAttributesMapOutput)
}

func (i SnapshotAttributesMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*SnapshotAttributes] {
	return pulumix.Output[map[string]*SnapshotAttributes]{
		OutputState: i.ToSnapshotAttributesMapOutputWithContext(ctx).OutputState,
	}
}

type SnapshotAttributesOutput struct{ *pulumi.OutputState }

func (SnapshotAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotAttributes)(nil)).Elem()
}

func (o SnapshotAttributesOutput) ToSnapshotAttributesOutput() SnapshotAttributesOutput {
	return o
}

func (o SnapshotAttributesOutput) ToSnapshotAttributesOutputWithContext(ctx context.Context) SnapshotAttributesOutput {
	return o
}

func (o SnapshotAttributesOutput) ToOutput(ctx context.Context) pulumix.Output[*SnapshotAttributes] {
	return pulumix.Output[*SnapshotAttributes]{
		OutputState: o.OutputState,
	}
}

func (o SnapshotAttributesOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *SnapshotAttributes) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

func (o SnapshotAttributesOutput) PermissionsToCreateVolumeAdditions() SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput {
	return o.ApplyT(func(v *SnapshotAttributes) SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput {
		return v.PermissionsToCreateVolumeAdditions
	}).(SnapshotAttributesPermissionsToCreateVolumeAdditionsPtrOutput)
}

func (o SnapshotAttributesOutput) PermissionsToCreateVolumeRemovals() SnapshotAttributesPermissionsToCreateVolumeRemovalArrayOutput {
	return o.ApplyT(func(v *SnapshotAttributes) SnapshotAttributesPermissionsToCreateVolumeRemovalArrayOutput {
		return v.PermissionsToCreateVolumeRemovals
	}).(SnapshotAttributesPermissionsToCreateVolumeRemovalArrayOutput)
}

func (o SnapshotAttributesOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v *SnapshotAttributes) pulumi.StringOutput { return v.RequestId }).(pulumi.StringOutput)
}

func (o SnapshotAttributesOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v *SnapshotAttributes) pulumi.StringOutput { return v.SnapshotId }).(pulumi.StringOutput)
}

type SnapshotAttributesArrayOutput struct{ *pulumi.OutputState }

func (SnapshotAttributesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SnapshotAttributes)(nil)).Elem()
}

func (o SnapshotAttributesArrayOutput) ToSnapshotAttributesArrayOutput() SnapshotAttributesArrayOutput {
	return o
}

func (o SnapshotAttributesArrayOutput) ToSnapshotAttributesArrayOutputWithContext(ctx context.Context) SnapshotAttributesArrayOutput {
	return o
}

func (o SnapshotAttributesArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*SnapshotAttributes] {
	return pulumix.Output[[]*SnapshotAttributes]{
		OutputState: o.OutputState,
	}
}

func (o SnapshotAttributesArrayOutput) Index(i pulumi.IntInput) SnapshotAttributesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SnapshotAttributes {
		return vs[0].([]*SnapshotAttributes)[vs[1].(int)]
	}).(SnapshotAttributesOutput)
}

type SnapshotAttributesMapOutput struct{ *pulumi.OutputState }

func (SnapshotAttributesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SnapshotAttributes)(nil)).Elem()
}

func (o SnapshotAttributesMapOutput) ToSnapshotAttributesMapOutput() SnapshotAttributesMapOutput {
	return o
}

func (o SnapshotAttributesMapOutput) ToSnapshotAttributesMapOutputWithContext(ctx context.Context) SnapshotAttributesMapOutput {
	return o
}

func (o SnapshotAttributesMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*SnapshotAttributes] {
	return pulumix.Output[map[string]*SnapshotAttributes]{
		OutputState: o.OutputState,
	}
}

func (o SnapshotAttributesMapOutput) MapIndex(k pulumi.StringInput) SnapshotAttributesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SnapshotAttributes {
		return vs[0].(map[string]*SnapshotAttributes)[vs[1].(string)]
	}).(SnapshotAttributesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotAttributesInput)(nil)).Elem(), &SnapshotAttributes{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotAttributesArrayInput)(nil)).Elem(), SnapshotAttributesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SnapshotAttributesMapInput)(nil)).Elem(), SnapshotAttributesMap{})
	pulumi.RegisterOutputType(SnapshotAttributesOutput{})
	pulumi.RegisterOutputType(SnapshotAttributesArrayOutput{})
	pulumi.RegisterOutputType(SnapshotAttributesMapOutput{})
}
