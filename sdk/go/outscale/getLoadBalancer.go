// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"github.com/outscale-vbr/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupLoadBalancer(ctx *pulumi.Context, args *LookupLoadBalancerArgs, opts ...pulumi.InvokeOption) (*LookupLoadBalancerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLoadBalancerResult
	err := ctx.Invoke("outscale:index/getLoadBalancer:getLoadBalancer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLoadBalancer.
type LookupLoadBalancerArgs struct {
	AccessLog        *GetLoadBalancerAccessLog   `pulumi:"accessLog"`
	BackendVmIds     []string                    `pulumi:"backendVmIds"`
	DnsName          *string                     `pulumi:"dnsName"`
	Filters          []GetLoadBalancerFilter     `pulumi:"filters"`
	HealthCheck      *GetLoadBalancerHealthCheck `pulumi:"healthCheck"`
	Listeners        []GetLoadBalancerListener   `pulumi:"listeners"`
	LoadBalancerName *string                     `pulumi:"loadBalancerName"`
	LoadBalancerType *string                     `pulumi:"loadBalancerType"`
	NetId            *string                     `pulumi:"netId"`
	SecurityGroups   []string                    `pulumi:"securityGroups"`
	Subnets          []string                    `pulumi:"subnets"`
	Tags             []GetLoadBalancerTag        `pulumi:"tags"`
}

// A collection of values returned by getLoadBalancer.
type LookupLoadBalancerResult struct {
	AccessLog                       GetLoadBalancerAccessLog                       `pulumi:"accessLog"`
	ApplicationStickyCookiePolicies []GetLoadBalancerApplicationStickyCookiePolicy `pulumi:"applicationStickyCookiePolicies"`
	BackendVmIds                    []string                                       `pulumi:"backendVmIds"`
	DnsName                         string                                         `pulumi:"dnsName"`
	Filters                         []GetLoadBalancerFilter                        `pulumi:"filters"`
	HealthCheck                     GetLoadBalancerHealthCheck                     `pulumi:"healthCheck"`
	// The provider-assigned unique ID for this managed resource.
	Id                               string                                          `pulumi:"id"`
	Listeners                        []GetLoadBalancerListener                       `pulumi:"listeners"`
	LoadBalancerName                 string                                          `pulumi:"loadBalancerName"`
	LoadBalancerStickyCookiePolicies []GetLoadBalancerLoadBalancerStickyCookiePolicy `pulumi:"loadBalancerStickyCookiePolicies"`
	LoadBalancerType                 string                                          `pulumi:"loadBalancerType"`
	NetId                            string                                          `pulumi:"netId"`
	PublicIp                         string                                          `pulumi:"publicIp"`
	RequestId                        string                                          `pulumi:"requestId"`
	SecuredCookies                   bool                                            `pulumi:"securedCookies"`
	SecurityGroups                   []string                                        `pulumi:"securityGroups"`
	SourceSecurityGroup              GetLoadBalancerSourceSecurityGroup              `pulumi:"sourceSecurityGroup"`
	Subnets                          []string                                        `pulumi:"subnets"`
	SubregionNames                   []string                                        `pulumi:"subregionNames"`
	Tags                             []GetLoadBalancerTag                            `pulumi:"tags"`
}

func LookupLoadBalancerOutput(ctx *pulumi.Context, args LookupLoadBalancerOutputArgs, opts ...pulumi.InvokeOption) LookupLoadBalancerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLoadBalancerResult, error) {
			args := v.(LookupLoadBalancerArgs)
			r, err := LookupLoadBalancer(ctx, &args, opts...)
			var s LookupLoadBalancerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupLoadBalancerResultOutput)
}

// A collection of arguments for invoking getLoadBalancer.
type LookupLoadBalancerOutputArgs struct {
	AccessLog        GetLoadBalancerAccessLogPtrInput   `pulumi:"accessLog"`
	BackendVmIds     pulumi.StringArrayInput            `pulumi:"backendVmIds"`
	DnsName          pulumi.StringPtrInput              `pulumi:"dnsName"`
	Filters          GetLoadBalancerFilterArrayInput    `pulumi:"filters"`
	HealthCheck      GetLoadBalancerHealthCheckPtrInput `pulumi:"healthCheck"`
	Listeners        GetLoadBalancerListenerArrayInput  `pulumi:"listeners"`
	LoadBalancerName pulumi.StringPtrInput              `pulumi:"loadBalancerName"`
	LoadBalancerType pulumi.StringPtrInput              `pulumi:"loadBalancerType"`
	NetId            pulumi.StringPtrInput              `pulumi:"netId"`
	SecurityGroups   pulumi.StringArrayInput            `pulumi:"securityGroups"`
	Subnets          pulumi.StringArrayInput            `pulumi:"subnets"`
	Tags             GetLoadBalancerTagArrayInput       `pulumi:"tags"`
}

func (LookupLoadBalancerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLoadBalancerArgs)(nil)).Elem()
}

// A collection of values returned by getLoadBalancer.
type LookupLoadBalancerResultOutput struct{ *pulumi.OutputState }

func (LookupLoadBalancerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLoadBalancerResult)(nil)).Elem()
}

func (o LookupLoadBalancerResultOutput) ToLookupLoadBalancerResultOutput() LookupLoadBalancerResultOutput {
	return o
}

func (o LookupLoadBalancerResultOutput) ToLookupLoadBalancerResultOutputWithContext(ctx context.Context) LookupLoadBalancerResultOutput {
	return o
}

func (o LookupLoadBalancerResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupLoadBalancerResult] {
	return pulumix.Output[LookupLoadBalancerResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupLoadBalancerResultOutput) AccessLog() GetLoadBalancerAccessLogOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) GetLoadBalancerAccessLog { return v.AccessLog }).(GetLoadBalancerAccessLogOutput)
}

func (o LookupLoadBalancerResultOutput) ApplicationStickyCookiePolicies() GetLoadBalancerApplicationStickyCookiePolicyArrayOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) []GetLoadBalancerApplicationStickyCookiePolicy {
		return v.ApplicationStickyCookiePolicies
	}).(GetLoadBalancerApplicationStickyCookiePolicyArrayOutput)
}

func (o LookupLoadBalancerResultOutput) BackendVmIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) []string { return v.BackendVmIds }).(pulumi.StringArrayOutput)
}

func (o LookupLoadBalancerResultOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.DnsName }).(pulumi.StringOutput)
}

func (o LookupLoadBalancerResultOutput) Filters() GetLoadBalancerFilterArrayOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) []GetLoadBalancerFilter { return v.Filters }).(GetLoadBalancerFilterArrayOutput)
}

func (o LookupLoadBalancerResultOutput) HealthCheck() GetLoadBalancerHealthCheckOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) GetLoadBalancerHealthCheck { return v.HealthCheck }).(GetLoadBalancerHealthCheckOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupLoadBalancerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupLoadBalancerResultOutput) Listeners() GetLoadBalancerListenerArrayOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) []GetLoadBalancerListener { return v.Listeners }).(GetLoadBalancerListenerArrayOutput)
}

func (o LookupLoadBalancerResultOutput) LoadBalancerName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.LoadBalancerName }).(pulumi.StringOutput)
}

func (o LookupLoadBalancerResultOutput) LoadBalancerStickyCookiePolicies() GetLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) []GetLoadBalancerLoadBalancerStickyCookiePolicy {
		return v.LoadBalancerStickyCookiePolicies
	}).(GetLoadBalancerLoadBalancerStickyCookiePolicyArrayOutput)
}

func (o LookupLoadBalancerResultOutput) LoadBalancerType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.LoadBalancerType }).(pulumi.StringOutput)
}

func (o LookupLoadBalancerResultOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.NetId }).(pulumi.StringOutput)
}

func (o LookupLoadBalancerResultOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.PublicIp }).(pulumi.StringOutput)
}

func (o LookupLoadBalancerResultOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.RequestId }).(pulumi.StringOutput)
}

func (o LookupLoadBalancerResultOutput) SecuredCookies() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) bool { return v.SecuredCookies }).(pulumi.BoolOutput)
}

func (o LookupLoadBalancerResultOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o LookupLoadBalancerResultOutput) SourceSecurityGroup() GetLoadBalancerSourceSecurityGroupOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) GetLoadBalancerSourceSecurityGroup { return v.SourceSecurityGroup }).(GetLoadBalancerSourceSecurityGroupOutput)
}

func (o LookupLoadBalancerResultOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

func (o LookupLoadBalancerResultOutput) SubregionNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) []string { return v.SubregionNames }).(pulumi.StringArrayOutput)
}

func (o LookupLoadBalancerResultOutput) Tags() GetLoadBalancerTagArrayOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) []GetLoadBalancerTag { return v.Tags }).(GetLoadBalancerTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLoadBalancerResultOutput{})
}
