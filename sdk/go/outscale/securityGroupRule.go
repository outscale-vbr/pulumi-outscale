// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"errors"
	"github.com/outscale-vbr/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type SecurityGroupRule struct {
	pulumi.CustomResourceState

	Flow                         pulumi.StringOutput              `pulumi:"flow"`
	FromPortRange                pulumi.IntPtrOutput              `pulumi:"fromPortRange"`
	IpProtocol                   pulumi.StringPtrOutput           `pulumi:"ipProtocol"`
	IpRange                      pulumi.StringPtrOutput           `pulumi:"ipRange"`
	NetId                        pulumi.StringOutput              `pulumi:"netId"`
	RequestId                    pulumi.StringOutput              `pulumi:"requestId"`
	Rules                        SecurityGroupRuleRuleArrayOutput `pulumi:"rules"`
	SecurityGroupAccountIdToLink pulumi.StringPtrOutput           `pulumi:"securityGroupAccountIdToLink"`
	SecurityGroupId              pulumi.StringOutput              `pulumi:"securityGroupId"`
	SecurityGroupName            pulumi.StringOutput              `pulumi:"securityGroupName"`
	SecurityGroupNameToLink      pulumi.StringPtrOutput           `pulumi:"securityGroupNameToLink"`
	ToPortRange                  pulumi.IntPtrOutput              `pulumi:"toPortRange"`
}

// NewSecurityGroupRule registers a new resource with the given unique name, arguments, and options.
func NewSecurityGroupRule(ctx *pulumi.Context,
	name string, args *SecurityGroupRuleArgs, opts ...pulumi.ResourceOption) (*SecurityGroupRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Flow == nil {
		return nil, errors.New("invalid value for required argument 'Flow'")
	}
	if args.SecurityGroupId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecurityGroupRule
	err := ctx.RegisterResource("outscale:index/securityGroupRule:SecurityGroupRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityGroupRule gets an existing SecurityGroupRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityGroupRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityGroupRuleState, opts ...pulumi.ResourceOption) (*SecurityGroupRule, error) {
	var resource SecurityGroupRule
	err := ctx.ReadResource("outscale:index/securityGroupRule:SecurityGroupRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityGroupRule resources.
type securityGroupRuleState struct {
	Flow                         *string                 `pulumi:"flow"`
	FromPortRange                *int                    `pulumi:"fromPortRange"`
	IpProtocol                   *string                 `pulumi:"ipProtocol"`
	IpRange                      *string                 `pulumi:"ipRange"`
	NetId                        *string                 `pulumi:"netId"`
	RequestId                    *string                 `pulumi:"requestId"`
	Rules                        []SecurityGroupRuleRule `pulumi:"rules"`
	SecurityGroupAccountIdToLink *string                 `pulumi:"securityGroupAccountIdToLink"`
	SecurityGroupId              *string                 `pulumi:"securityGroupId"`
	SecurityGroupName            *string                 `pulumi:"securityGroupName"`
	SecurityGroupNameToLink      *string                 `pulumi:"securityGroupNameToLink"`
	ToPortRange                  *int                    `pulumi:"toPortRange"`
}

type SecurityGroupRuleState struct {
	Flow                         pulumi.StringPtrInput
	FromPortRange                pulumi.IntPtrInput
	IpProtocol                   pulumi.StringPtrInput
	IpRange                      pulumi.StringPtrInput
	NetId                        pulumi.StringPtrInput
	RequestId                    pulumi.StringPtrInput
	Rules                        SecurityGroupRuleRuleArrayInput
	SecurityGroupAccountIdToLink pulumi.StringPtrInput
	SecurityGroupId              pulumi.StringPtrInput
	SecurityGroupName            pulumi.StringPtrInput
	SecurityGroupNameToLink      pulumi.StringPtrInput
	ToPortRange                  pulumi.IntPtrInput
}

func (SecurityGroupRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGroupRuleState)(nil)).Elem()
}

type securityGroupRuleArgs struct {
	Flow                         string                  `pulumi:"flow"`
	FromPortRange                *int                    `pulumi:"fromPortRange"`
	IpProtocol                   *string                 `pulumi:"ipProtocol"`
	IpRange                      *string                 `pulumi:"ipRange"`
	Rules                        []SecurityGroupRuleRule `pulumi:"rules"`
	SecurityGroupAccountIdToLink *string                 `pulumi:"securityGroupAccountIdToLink"`
	SecurityGroupId              string                  `pulumi:"securityGroupId"`
	SecurityGroupNameToLink      *string                 `pulumi:"securityGroupNameToLink"`
	ToPortRange                  *int                    `pulumi:"toPortRange"`
}

// The set of arguments for constructing a SecurityGroupRule resource.
type SecurityGroupRuleArgs struct {
	Flow                         pulumi.StringInput
	FromPortRange                pulumi.IntPtrInput
	IpProtocol                   pulumi.StringPtrInput
	IpRange                      pulumi.StringPtrInput
	Rules                        SecurityGroupRuleRuleArrayInput
	SecurityGroupAccountIdToLink pulumi.StringPtrInput
	SecurityGroupId              pulumi.StringInput
	SecurityGroupNameToLink      pulumi.StringPtrInput
	ToPortRange                  pulumi.IntPtrInput
}

func (SecurityGroupRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGroupRuleArgs)(nil)).Elem()
}

type SecurityGroupRuleInput interface {
	pulumi.Input

	ToSecurityGroupRuleOutput() SecurityGroupRuleOutput
	ToSecurityGroupRuleOutputWithContext(ctx context.Context) SecurityGroupRuleOutput
}

func (*SecurityGroupRule) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGroupRule)(nil)).Elem()
}

func (i *SecurityGroupRule) ToSecurityGroupRuleOutput() SecurityGroupRuleOutput {
	return i.ToSecurityGroupRuleOutputWithContext(context.Background())
}

func (i *SecurityGroupRule) ToSecurityGroupRuleOutputWithContext(ctx context.Context) SecurityGroupRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupRuleOutput)
}

func (i *SecurityGroupRule) ToOutput(ctx context.Context) pulumix.Output[*SecurityGroupRule] {
	return pulumix.Output[*SecurityGroupRule]{
		OutputState: i.ToSecurityGroupRuleOutputWithContext(ctx).OutputState,
	}
}

// SecurityGroupRuleArrayInput is an input type that accepts SecurityGroupRuleArray and SecurityGroupRuleArrayOutput values.
// You can construct a concrete instance of `SecurityGroupRuleArrayInput` via:
//
//	SecurityGroupRuleArray{ SecurityGroupRuleArgs{...} }
type SecurityGroupRuleArrayInput interface {
	pulumi.Input

	ToSecurityGroupRuleArrayOutput() SecurityGroupRuleArrayOutput
	ToSecurityGroupRuleArrayOutputWithContext(context.Context) SecurityGroupRuleArrayOutput
}

type SecurityGroupRuleArray []SecurityGroupRuleInput

func (SecurityGroupRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityGroupRule)(nil)).Elem()
}

func (i SecurityGroupRuleArray) ToSecurityGroupRuleArrayOutput() SecurityGroupRuleArrayOutput {
	return i.ToSecurityGroupRuleArrayOutputWithContext(context.Background())
}

func (i SecurityGroupRuleArray) ToSecurityGroupRuleArrayOutputWithContext(ctx context.Context) SecurityGroupRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupRuleArrayOutput)
}

func (i SecurityGroupRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]*SecurityGroupRule] {
	return pulumix.Output[[]*SecurityGroupRule]{
		OutputState: i.ToSecurityGroupRuleArrayOutputWithContext(ctx).OutputState,
	}
}

// SecurityGroupRuleMapInput is an input type that accepts SecurityGroupRuleMap and SecurityGroupRuleMapOutput values.
// You can construct a concrete instance of `SecurityGroupRuleMapInput` via:
//
//	SecurityGroupRuleMap{ "key": SecurityGroupRuleArgs{...} }
type SecurityGroupRuleMapInput interface {
	pulumi.Input

	ToSecurityGroupRuleMapOutput() SecurityGroupRuleMapOutput
	ToSecurityGroupRuleMapOutputWithContext(context.Context) SecurityGroupRuleMapOutput
}

type SecurityGroupRuleMap map[string]SecurityGroupRuleInput

func (SecurityGroupRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityGroupRule)(nil)).Elem()
}

func (i SecurityGroupRuleMap) ToSecurityGroupRuleMapOutput() SecurityGroupRuleMapOutput {
	return i.ToSecurityGroupRuleMapOutputWithContext(context.Background())
}

func (i SecurityGroupRuleMap) ToSecurityGroupRuleMapOutputWithContext(ctx context.Context) SecurityGroupRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupRuleMapOutput)
}

func (i SecurityGroupRuleMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*SecurityGroupRule] {
	return pulumix.Output[map[string]*SecurityGroupRule]{
		OutputState: i.ToSecurityGroupRuleMapOutputWithContext(ctx).OutputState,
	}
}

type SecurityGroupRuleOutput struct{ *pulumi.OutputState }

func (SecurityGroupRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGroupRule)(nil)).Elem()
}

func (o SecurityGroupRuleOutput) ToSecurityGroupRuleOutput() SecurityGroupRuleOutput {
	return o
}

func (o SecurityGroupRuleOutput) ToSecurityGroupRuleOutputWithContext(ctx context.Context) SecurityGroupRuleOutput {
	return o
}

func (o SecurityGroupRuleOutput) ToOutput(ctx context.Context) pulumix.Output[*SecurityGroupRule] {
	return pulumix.Output[*SecurityGroupRule]{
		OutputState: o.OutputState,
	}
}

func (o SecurityGroupRuleOutput) Flow() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGroupRule) pulumi.StringOutput { return v.Flow }).(pulumi.StringOutput)
}

func (o SecurityGroupRuleOutput) FromPortRange() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecurityGroupRule) pulumi.IntPtrOutput { return v.FromPortRange }).(pulumi.IntPtrOutput)
}

func (o SecurityGroupRuleOutput) IpProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityGroupRule) pulumi.StringPtrOutput { return v.IpProtocol }).(pulumi.StringPtrOutput)
}

func (o SecurityGroupRuleOutput) IpRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityGroupRule) pulumi.StringPtrOutput { return v.IpRange }).(pulumi.StringPtrOutput)
}

func (o SecurityGroupRuleOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGroupRule) pulumi.StringOutput { return v.NetId }).(pulumi.StringOutput)
}

func (o SecurityGroupRuleOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGroupRule) pulumi.StringOutput { return v.RequestId }).(pulumi.StringOutput)
}

func (o SecurityGroupRuleOutput) Rules() SecurityGroupRuleRuleArrayOutput {
	return o.ApplyT(func(v *SecurityGroupRule) SecurityGroupRuleRuleArrayOutput { return v.Rules }).(SecurityGroupRuleRuleArrayOutput)
}

func (o SecurityGroupRuleOutput) SecurityGroupAccountIdToLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityGroupRule) pulumi.StringPtrOutput { return v.SecurityGroupAccountIdToLink }).(pulumi.StringPtrOutput)
}

func (o SecurityGroupRuleOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGroupRule) pulumi.StringOutput { return v.SecurityGroupId }).(pulumi.StringOutput)
}

func (o SecurityGroupRuleOutput) SecurityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGroupRule) pulumi.StringOutput { return v.SecurityGroupName }).(pulumi.StringOutput)
}

func (o SecurityGroupRuleOutput) SecurityGroupNameToLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityGroupRule) pulumi.StringPtrOutput { return v.SecurityGroupNameToLink }).(pulumi.StringPtrOutput)
}

func (o SecurityGroupRuleOutput) ToPortRange() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecurityGroupRule) pulumi.IntPtrOutput { return v.ToPortRange }).(pulumi.IntPtrOutput)
}

type SecurityGroupRuleArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityGroupRule)(nil)).Elem()
}

func (o SecurityGroupRuleArrayOutput) ToSecurityGroupRuleArrayOutput() SecurityGroupRuleArrayOutput {
	return o
}

func (o SecurityGroupRuleArrayOutput) ToSecurityGroupRuleArrayOutputWithContext(ctx context.Context) SecurityGroupRuleArrayOutput {
	return o
}

func (o SecurityGroupRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*SecurityGroupRule] {
	return pulumix.Output[[]*SecurityGroupRule]{
		OutputState: o.OutputState,
	}
}

func (o SecurityGroupRuleArrayOutput) Index(i pulumi.IntInput) SecurityGroupRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecurityGroupRule {
		return vs[0].([]*SecurityGroupRule)[vs[1].(int)]
	}).(SecurityGroupRuleOutput)
}

type SecurityGroupRuleMapOutput struct{ *pulumi.OutputState }

func (SecurityGroupRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityGroupRule)(nil)).Elem()
}

func (o SecurityGroupRuleMapOutput) ToSecurityGroupRuleMapOutput() SecurityGroupRuleMapOutput {
	return o
}

func (o SecurityGroupRuleMapOutput) ToSecurityGroupRuleMapOutputWithContext(ctx context.Context) SecurityGroupRuleMapOutput {
	return o
}

func (o SecurityGroupRuleMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*SecurityGroupRule] {
	return pulumix.Output[map[string]*SecurityGroupRule]{
		OutputState: o.OutputState,
	}
}

func (o SecurityGroupRuleMapOutput) MapIndex(k pulumi.StringInput) SecurityGroupRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecurityGroupRule {
		return vs[0].(map[string]*SecurityGroupRule)[vs[1].(string)]
	}).(SecurityGroupRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupRuleInput)(nil)).Elem(), &SecurityGroupRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupRuleArrayInput)(nil)).Elem(), SecurityGroupRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupRuleMapInput)(nil)).Elem(), SecurityGroupRuleMap{})
	pulumi.RegisterOutputType(SecurityGroupRuleOutput{})
	pulumi.RegisterOutputType(SecurityGroupRuleArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupRuleMapOutput{})
}
