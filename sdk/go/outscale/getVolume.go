// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"github.com/outscale-vbr/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupVolume(ctx *pulumi.Context, args *LookupVolumeArgs, opts ...pulumi.InvokeOption) (*LookupVolumeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVolumeResult
	err := ctx.Invoke("outscale:index/getVolume:getVolume", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVolume.
type LookupVolumeArgs struct {
	Filters   []GetVolumeFilter `pulumi:"filters"`
	RequestId *string           `pulumi:"requestId"`
	VolumeId  *string           `pulumi:"volumeId"`
}

// A collection of values returned by getVolume.
type LookupVolumeResult struct {
	CreationDate string            `pulumi:"creationDate"`
	Filters      []GetVolumeFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id            string                  `pulumi:"id"`
	Iops          int                     `pulumi:"iops"`
	LinkedVolumes []GetVolumeLinkedVolume `pulumi:"linkedVolumes"`
	RequestId     *string                 `pulumi:"requestId"`
	Size          int                     `pulumi:"size"`
	SnapshotId    string                  `pulumi:"snapshotId"`
	State         string                  `pulumi:"state"`
	SubregionName string                  `pulumi:"subregionName"`
	Tags          []GetVolumeTag          `pulumi:"tags"`
	VolumeId      *string                 `pulumi:"volumeId"`
	VolumeType    string                  `pulumi:"volumeType"`
}

func LookupVolumeOutput(ctx *pulumi.Context, args LookupVolumeOutputArgs, opts ...pulumi.InvokeOption) LookupVolumeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVolumeResult, error) {
			args := v.(LookupVolumeArgs)
			r, err := LookupVolume(ctx, &args, opts...)
			var s LookupVolumeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVolumeResultOutput)
}

// A collection of arguments for invoking getVolume.
type LookupVolumeOutputArgs struct {
	Filters   GetVolumeFilterArrayInput `pulumi:"filters"`
	RequestId pulumi.StringPtrInput     `pulumi:"requestId"`
	VolumeId  pulumi.StringPtrInput     `pulumi:"volumeId"`
}

func (LookupVolumeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVolumeArgs)(nil)).Elem()
}

// A collection of values returned by getVolume.
type LookupVolumeResultOutput struct{ *pulumi.OutputState }

func (LookupVolumeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVolumeResult)(nil)).Elem()
}

func (o LookupVolumeResultOutput) ToLookupVolumeResultOutput() LookupVolumeResultOutput {
	return o
}

func (o LookupVolumeResultOutput) ToLookupVolumeResultOutputWithContext(ctx context.Context) LookupVolumeResultOutput {
	return o
}

func (o LookupVolumeResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupVolumeResult] {
	return pulumix.Output[LookupVolumeResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupVolumeResultOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.CreationDate }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) Filters() GetVolumeFilterArrayOutput {
	return o.ApplyT(func(v LookupVolumeResult) []GetVolumeFilter { return v.Filters }).(GetVolumeFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVolumeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVolumeResult) int { return v.Iops }).(pulumi.IntOutput)
}

func (o LookupVolumeResultOutput) LinkedVolumes() GetVolumeLinkedVolumeArrayOutput {
	return o.ApplyT(func(v LookupVolumeResult) []GetVolumeLinkedVolume { return v.LinkedVolumes }).(GetVolumeLinkedVolumeArrayOutput)
}

func (o LookupVolumeResultOutput) RequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVolumeResult) *string { return v.RequestId }).(pulumi.StringPtrOutput)
}

func (o LookupVolumeResultOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVolumeResult) int { return v.Size }).(pulumi.IntOutput)
}

func (o LookupVolumeResultOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.SnapshotId }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) SubregionName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.SubregionName }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) Tags() GetVolumeTagArrayOutput {
	return o.ApplyT(func(v LookupVolumeResult) []GetVolumeTag { return v.Tags }).(GetVolumeTagArrayOutput)
}

func (o LookupVolumeResultOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVolumeResult) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

func (o LookupVolumeResultOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.VolumeType }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVolumeResultOutput{})
}
