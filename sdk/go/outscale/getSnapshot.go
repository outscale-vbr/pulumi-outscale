// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"github.com/outscale-vbr/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupSnapshot(ctx *pulumi.Context, args *LookupSnapshotArgs, opts ...pulumi.InvokeOption) (*LookupSnapshotResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSnapshotResult
	err := ctx.Invoke("outscale:index/getSnapshot:getSnapshot", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSnapshot.
type LookupSnapshotArgs struct {
	AccountId  *string             `pulumi:"accountId"`
	Filters    []GetSnapshotFilter `pulumi:"filters"`
	SnapshotId *string             `pulumi:"snapshotId"`
}

// A collection of values returned by getSnapshot.
type LookupSnapshotResult struct {
	AccountAlias string              `pulumi:"accountAlias"`
	AccountId    string              `pulumi:"accountId"`
	CreationDate string              `pulumi:"creationDate"`
	Description  string              `pulumi:"description"`
	Filters      []GetSnapshotFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                         string                                 `pulumi:"id"`
	PermissionsToCreateVolumes []GetSnapshotPermissionsToCreateVolume `pulumi:"permissionsToCreateVolumes"`
	Progress                   int                                    `pulumi:"progress"`
	RequestId                  string                                 `pulumi:"requestId"`
	SnapshotId                 string                                 `pulumi:"snapshotId"`
	State                      string                                 `pulumi:"state"`
	Tags                       []GetSnapshotTag                       `pulumi:"tags"`
	VolumeId                   string                                 `pulumi:"volumeId"`
	VolumeSize                 int                                    `pulumi:"volumeSize"`
}

func LookupSnapshotOutput(ctx *pulumi.Context, args LookupSnapshotOutputArgs, opts ...pulumi.InvokeOption) LookupSnapshotResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSnapshotResult, error) {
			args := v.(LookupSnapshotArgs)
			r, err := LookupSnapshot(ctx, &args, opts...)
			var s LookupSnapshotResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSnapshotResultOutput)
}

// A collection of arguments for invoking getSnapshot.
type LookupSnapshotOutputArgs struct {
	AccountId  pulumi.StringPtrInput       `pulumi:"accountId"`
	Filters    GetSnapshotFilterArrayInput `pulumi:"filters"`
	SnapshotId pulumi.StringPtrInput       `pulumi:"snapshotId"`
}

func (LookupSnapshotOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSnapshotArgs)(nil)).Elem()
}

// A collection of values returned by getSnapshot.
type LookupSnapshotResultOutput struct{ *pulumi.OutputState }

func (LookupSnapshotResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSnapshotResult)(nil)).Elem()
}

func (o LookupSnapshotResultOutput) ToLookupSnapshotResultOutput() LookupSnapshotResultOutput {
	return o
}

func (o LookupSnapshotResultOutput) ToLookupSnapshotResultOutputWithContext(ctx context.Context) LookupSnapshotResultOutput {
	return o
}

func (o LookupSnapshotResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupSnapshotResult] {
	return pulumix.Output[LookupSnapshotResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupSnapshotResultOutput) AccountAlias() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.AccountAlias }).(pulumi.StringOutput)
}

func (o LookupSnapshotResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.AccountId }).(pulumi.StringOutput)
}

func (o LookupSnapshotResultOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.CreationDate }).(pulumi.StringOutput)
}

func (o LookupSnapshotResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupSnapshotResultOutput) Filters() GetSnapshotFilterArrayOutput {
	return o.ApplyT(func(v LookupSnapshotResult) []GetSnapshotFilter { return v.Filters }).(GetSnapshotFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSnapshotResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSnapshotResultOutput) PermissionsToCreateVolumes() GetSnapshotPermissionsToCreateVolumeArrayOutput {
	return o.ApplyT(func(v LookupSnapshotResult) []GetSnapshotPermissionsToCreateVolume {
		return v.PermissionsToCreateVolumes
	}).(GetSnapshotPermissionsToCreateVolumeArrayOutput)
}

func (o LookupSnapshotResultOutput) Progress() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSnapshotResult) int { return v.Progress }).(pulumi.IntOutput)
}

func (o LookupSnapshotResultOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.RequestId }).(pulumi.StringOutput)
}

func (o LookupSnapshotResultOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.SnapshotId }).(pulumi.StringOutput)
}

func (o LookupSnapshotResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupSnapshotResultOutput) Tags() GetSnapshotTagArrayOutput {
	return o.ApplyT(func(v LookupSnapshotResult) []GetSnapshotTag { return v.Tags }).(GetSnapshotTagArrayOutput)
}

func (o LookupSnapshotResultOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.VolumeId }).(pulumi.StringOutput)
}

func (o LookupSnapshotResultOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSnapshotResult) int { return v.VolumeSize }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSnapshotResultOutput{})
}
