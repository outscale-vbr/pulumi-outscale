// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"errors"
	"github.com/outscale-vbr/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type LoadBalancer struct {
	pulumi.CustomResourceState

	AccessLog                        LoadBalancerAccessLogOutput                           `pulumi:"accessLog"`
	ApplicationStickyCookiePolicies  LoadBalancerApplicationStickyCookiePolicyArrayOutput  `pulumi:"applicationStickyCookiePolicies"`
	BackendVmIds                     pulumi.StringArrayOutput                              `pulumi:"backendVmIds"`
	DnsName                          pulumi.StringOutput                                   `pulumi:"dnsName"`
	HealthCheck                      LoadBalancerHealthCheckOutput                         `pulumi:"healthCheck"`
	Listeners                        LoadBalancerListenerArrayOutput                       `pulumi:"listeners"`
	LoadBalancerName                 pulumi.StringOutput                                   `pulumi:"loadBalancerName"`
	LoadBalancerStickyCookiePolicies LoadBalancerLoadBalancerStickyCookiePolicyArrayOutput `pulumi:"loadBalancerStickyCookiePolicies"`
	LoadBalancerType                 pulumi.StringOutput                                   `pulumi:"loadBalancerType"`
	NetId                            pulumi.StringOutput                                   `pulumi:"netId"`
	PublicIp                         pulumi.StringOutput                                   `pulumi:"publicIp"`
	RequestId                        pulumi.StringOutput                                   `pulumi:"requestId"`
	SecuredCookies                   pulumi.BoolOutput                                     `pulumi:"securedCookies"`
	SecurityGroups                   pulumi.StringArrayOutput                              `pulumi:"securityGroups"`
	SourceSecurityGroup              LoadBalancerSourceSecurityGroupOutput                 `pulumi:"sourceSecurityGroup"`
	Subnets                          pulumi.StringArrayOutput                              `pulumi:"subnets"`
	SubregionNames                   pulumi.StringArrayOutput                              `pulumi:"subregionNames"`
	Tags                             LoadBalancerTagArrayOutput                            `pulumi:"tags"`
}

// NewLoadBalancer registers a new resource with the given unique name, arguments, and options.
func NewLoadBalancer(ctx *pulumi.Context,
	name string, args *LoadBalancerArgs, opts ...pulumi.ResourceOption) (*LoadBalancer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Listeners == nil {
		return nil, errors.New("invalid value for required argument 'Listeners'")
	}
	if args.LoadBalancerName == nil {
		return nil, errors.New("invalid value for required argument 'LoadBalancerName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LoadBalancer
	err := ctx.RegisterResource("outscale:index/loadBalancer:LoadBalancer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoadBalancer gets an existing LoadBalancer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoadBalancer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoadBalancerState, opts ...pulumi.ResourceOption) (*LoadBalancer, error) {
	var resource LoadBalancer
	err := ctx.ReadResource("outscale:index/loadBalancer:LoadBalancer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoadBalancer resources.
type loadBalancerState struct {
	AccessLog                        *LoadBalancerAccessLog                       `pulumi:"accessLog"`
	ApplicationStickyCookiePolicies  []LoadBalancerApplicationStickyCookiePolicy  `pulumi:"applicationStickyCookiePolicies"`
	BackendVmIds                     []string                                     `pulumi:"backendVmIds"`
	DnsName                          *string                                      `pulumi:"dnsName"`
	HealthCheck                      *LoadBalancerHealthCheck                     `pulumi:"healthCheck"`
	Listeners                        []LoadBalancerListener                       `pulumi:"listeners"`
	LoadBalancerName                 *string                                      `pulumi:"loadBalancerName"`
	LoadBalancerStickyCookiePolicies []LoadBalancerLoadBalancerStickyCookiePolicy `pulumi:"loadBalancerStickyCookiePolicies"`
	LoadBalancerType                 *string                                      `pulumi:"loadBalancerType"`
	NetId                            *string                                      `pulumi:"netId"`
	PublicIp                         *string                                      `pulumi:"publicIp"`
	RequestId                        *string                                      `pulumi:"requestId"`
	SecuredCookies                   *bool                                        `pulumi:"securedCookies"`
	SecurityGroups                   []string                                     `pulumi:"securityGroups"`
	SourceSecurityGroup              *LoadBalancerSourceSecurityGroup             `pulumi:"sourceSecurityGroup"`
	Subnets                          []string                                     `pulumi:"subnets"`
	SubregionNames                   []string                                     `pulumi:"subregionNames"`
	Tags                             []LoadBalancerTag                            `pulumi:"tags"`
}

type LoadBalancerState struct {
	AccessLog                        LoadBalancerAccessLogPtrInput
	ApplicationStickyCookiePolicies  LoadBalancerApplicationStickyCookiePolicyArrayInput
	BackendVmIds                     pulumi.StringArrayInput
	DnsName                          pulumi.StringPtrInput
	HealthCheck                      LoadBalancerHealthCheckPtrInput
	Listeners                        LoadBalancerListenerArrayInput
	LoadBalancerName                 pulumi.StringPtrInput
	LoadBalancerStickyCookiePolicies LoadBalancerLoadBalancerStickyCookiePolicyArrayInput
	LoadBalancerType                 pulumi.StringPtrInput
	NetId                            pulumi.StringPtrInput
	PublicIp                         pulumi.StringPtrInput
	RequestId                        pulumi.StringPtrInput
	SecuredCookies                   pulumi.BoolPtrInput
	SecurityGroups                   pulumi.StringArrayInput
	SourceSecurityGroup              LoadBalancerSourceSecurityGroupPtrInput
	Subnets                          pulumi.StringArrayInput
	SubregionNames                   pulumi.StringArrayInput
	Tags                             LoadBalancerTagArrayInput
}

func (LoadBalancerState) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerState)(nil)).Elem()
}

type loadBalancerArgs struct {
	AccessLog        *LoadBalancerAccessLog `pulumi:"accessLog"`
	BackendVmIds     []string               `pulumi:"backendVmIds"`
	Listeners        []LoadBalancerListener `pulumi:"listeners"`
	LoadBalancerName string                 `pulumi:"loadBalancerName"`
	LoadBalancerType *string                `pulumi:"loadBalancerType"`
	PublicIp         *string                `pulumi:"publicIp"`
	SecuredCookies   *bool                  `pulumi:"securedCookies"`
	SecurityGroups   []string               `pulumi:"securityGroups"`
	Subnets          []string               `pulumi:"subnets"`
	SubregionNames   []string               `pulumi:"subregionNames"`
	Tags             []LoadBalancerTag      `pulumi:"tags"`
}

// The set of arguments for constructing a LoadBalancer resource.
type LoadBalancerArgs struct {
	AccessLog        LoadBalancerAccessLogPtrInput
	BackendVmIds     pulumi.StringArrayInput
	Listeners        LoadBalancerListenerArrayInput
	LoadBalancerName pulumi.StringInput
	LoadBalancerType pulumi.StringPtrInput
	PublicIp         pulumi.StringPtrInput
	SecuredCookies   pulumi.BoolPtrInput
	SecurityGroups   pulumi.StringArrayInput
	Subnets          pulumi.StringArrayInput
	SubregionNames   pulumi.StringArrayInput
	Tags             LoadBalancerTagArrayInput
}

func (LoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerArgs)(nil)).Elem()
}

type LoadBalancerInput interface {
	pulumi.Input

	ToLoadBalancerOutput() LoadBalancerOutput
	ToLoadBalancerOutputWithContext(ctx context.Context) LoadBalancerOutput
}

func (*LoadBalancer) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancer)(nil)).Elem()
}

func (i *LoadBalancer) ToLoadBalancerOutput() LoadBalancerOutput {
	return i.ToLoadBalancerOutputWithContext(context.Background())
}

func (i *LoadBalancer) ToLoadBalancerOutputWithContext(ctx context.Context) LoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerOutput)
}

func (i *LoadBalancer) ToOutput(ctx context.Context) pulumix.Output[*LoadBalancer] {
	return pulumix.Output[*LoadBalancer]{
		OutputState: i.ToLoadBalancerOutputWithContext(ctx).OutputState,
	}
}

// LoadBalancerArrayInput is an input type that accepts LoadBalancerArray and LoadBalancerArrayOutput values.
// You can construct a concrete instance of `LoadBalancerArrayInput` via:
//
//	LoadBalancerArray{ LoadBalancerArgs{...} }
type LoadBalancerArrayInput interface {
	pulumi.Input

	ToLoadBalancerArrayOutput() LoadBalancerArrayOutput
	ToLoadBalancerArrayOutputWithContext(context.Context) LoadBalancerArrayOutput
}

type LoadBalancerArray []LoadBalancerInput

func (LoadBalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoadBalancer)(nil)).Elem()
}

func (i LoadBalancerArray) ToLoadBalancerArrayOutput() LoadBalancerArrayOutput {
	return i.ToLoadBalancerArrayOutputWithContext(context.Background())
}

func (i LoadBalancerArray) ToLoadBalancerArrayOutputWithContext(ctx context.Context) LoadBalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerArrayOutput)
}

func (i LoadBalancerArray) ToOutput(ctx context.Context) pulumix.Output[[]*LoadBalancer] {
	return pulumix.Output[[]*LoadBalancer]{
		OutputState: i.ToLoadBalancerArrayOutputWithContext(ctx).OutputState,
	}
}

// LoadBalancerMapInput is an input type that accepts LoadBalancerMap and LoadBalancerMapOutput values.
// You can construct a concrete instance of `LoadBalancerMapInput` via:
//
//	LoadBalancerMap{ "key": LoadBalancerArgs{...} }
type LoadBalancerMapInput interface {
	pulumi.Input

	ToLoadBalancerMapOutput() LoadBalancerMapOutput
	ToLoadBalancerMapOutputWithContext(context.Context) LoadBalancerMapOutput
}

type LoadBalancerMap map[string]LoadBalancerInput

func (LoadBalancerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoadBalancer)(nil)).Elem()
}

func (i LoadBalancerMap) ToLoadBalancerMapOutput() LoadBalancerMapOutput {
	return i.ToLoadBalancerMapOutputWithContext(context.Background())
}

func (i LoadBalancerMap) ToLoadBalancerMapOutputWithContext(ctx context.Context) LoadBalancerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerMapOutput)
}

func (i LoadBalancerMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*LoadBalancer] {
	return pulumix.Output[map[string]*LoadBalancer]{
		OutputState: i.ToLoadBalancerMapOutputWithContext(ctx).OutputState,
	}
}

type LoadBalancerOutput struct{ *pulumi.OutputState }

func (LoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancer)(nil)).Elem()
}

func (o LoadBalancerOutput) ToLoadBalancerOutput() LoadBalancerOutput {
	return o
}

func (o LoadBalancerOutput) ToLoadBalancerOutputWithContext(ctx context.Context) LoadBalancerOutput {
	return o
}

func (o LoadBalancerOutput) ToOutput(ctx context.Context) pulumix.Output[*LoadBalancer] {
	return pulumix.Output[*LoadBalancer]{
		OutputState: o.OutputState,
	}
}

func (o LoadBalancerOutput) AccessLog() LoadBalancerAccessLogOutput {
	return o.ApplyT(func(v *LoadBalancer) LoadBalancerAccessLogOutput { return v.AccessLog }).(LoadBalancerAccessLogOutput)
}

func (o LoadBalancerOutput) ApplicationStickyCookiePolicies() LoadBalancerApplicationStickyCookiePolicyArrayOutput {
	return o.ApplyT(func(v *LoadBalancer) LoadBalancerApplicationStickyCookiePolicyArrayOutput {
		return v.ApplicationStickyCookiePolicies
	}).(LoadBalancerApplicationStickyCookiePolicyArrayOutput)
}

func (o LoadBalancerOutput) BackendVmIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringArrayOutput { return v.BackendVmIds }).(pulumi.StringArrayOutput)
}

func (o LoadBalancerOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringOutput { return v.DnsName }).(pulumi.StringOutput)
}

func (o LoadBalancerOutput) HealthCheck() LoadBalancerHealthCheckOutput {
	return o.ApplyT(func(v *LoadBalancer) LoadBalancerHealthCheckOutput { return v.HealthCheck }).(LoadBalancerHealthCheckOutput)
}

func (o LoadBalancerOutput) Listeners() LoadBalancerListenerArrayOutput {
	return o.ApplyT(func(v *LoadBalancer) LoadBalancerListenerArrayOutput { return v.Listeners }).(LoadBalancerListenerArrayOutput)
}

func (o LoadBalancerOutput) LoadBalancerName() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringOutput { return v.LoadBalancerName }).(pulumi.StringOutput)
}

func (o LoadBalancerOutput) LoadBalancerStickyCookiePolicies() LoadBalancerLoadBalancerStickyCookiePolicyArrayOutput {
	return o.ApplyT(func(v *LoadBalancer) LoadBalancerLoadBalancerStickyCookiePolicyArrayOutput {
		return v.LoadBalancerStickyCookiePolicies
	}).(LoadBalancerLoadBalancerStickyCookiePolicyArrayOutput)
}

func (o LoadBalancerOutput) LoadBalancerType() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringOutput { return v.LoadBalancerType }).(pulumi.StringOutput)
}

func (o LoadBalancerOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringOutput { return v.NetId }).(pulumi.StringOutput)
}

func (o LoadBalancerOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringOutput { return v.PublicIp }).(pulumi.StringOutput)
}

func (o LoadBalancerOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringOutput { return v.RequestId }).(pulumi.StringOutput)
}

func (o LoadBalancerOutput) SecuredCookies() pulumi.BoolOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.BoolOutput { return v.SecuredCookies }).(pulumi.BoolOutput)
}

func (o LoadBalancerOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringArrayOutput { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o LoadBalancerOutput) SourceSecurityGroup() LoadBalancerSourceSecurityGroupOutput {
	return o.ApplyT(func(v *LoadBalancer) LoadBalancerSourceSecurityGroupOutput { return v.SourceSecurityGroup }).(LoadBalancerSourceSecurityGroupOutput)
}

func (o LoadBalancerOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringArrayOutput { return v.Subnets }).(pulumi.StringArrayOutput)
}

func (o LoadBalancerOutput) SubregionNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LoadBalancer) pulumi.StringArrayOutput { return v.SubregionNames }).(pulumi.StringArrayOutput)
}

func (o LoadBalancerOutput) Tags() LoadBalancerTagArrayOutput {
	return o.ApplyT(func(v *LoadBalancer) LoadBalancerTagArrayOutput { return v.Tags }).(LoadBalancerTagArrayOutput)
}

type LoadBalancerArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoadBalancer)(nil)).Elem()
}

func (o LoadBalancerArrayOutput) ToLoadBalancerArrayOutput() LoadBalancerArrayOutput {
	return o
}

func (o LoadBalancerArrayOutput) ToLoadBalancerArrayOutputWithContext(ctx context.Context) LoadBalancerArrayOutput {
	return o
}

func (o LoadBalancerArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*LoadBalancer] {
	return pulumix.Output[[]*LoadBalancer]{
		OutputState: o.OutputState,
	}
}

func (o LoadBalancerArrayOutput) Index(i pulumi.IntInput) LoadBalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LoadBalancer {
		return vs[0].([]*LoadBalancer)[vs[1].(int)]
	}).(LoadBalancerOutput)
}

type LoadBalancerMapOutput struct{ *pulumi.OutputState }

func (LoadBalancerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoadBalancer)(nil)).Elem()
}

func (o LoadBalancerMapOutput) ToLoadBalancerMapOutput() LoadBalancerMapOutput {
	return o
}

func (o LoadBalancerMapOutput) ToLoadBalancerMapOutputWithContext(ctx context.Context) LoadBalancerMapOutput {
	return o
}

func (o LoadBalancerMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*LoadBalancer] {
	return pulumix.Output[map[string]*LoadBalancer]{
		OutputState: o.OutputState,
	}
}

func (o LoadBalancerMapOutput) MapIndex(k pulumi.StringInput) LoadBalancerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LoadBalancer {
		return vs[0].(map[string]*LoadBalancer)[vs[1].(string)]
	}).(LoadBalancerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerInput)(nil)).Elem(), &LoadBalancer{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerArrayInput)(nil)).Elem(), LoadBalancerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerMapInput)(nil)).Elem(), LoadBalancerMap{})
	pulumi.RegisterOutputType(LoadBalancerOutput{})
	pulumi.RegisterOutputType(LoadBalancerArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerMapOutput{})
}
