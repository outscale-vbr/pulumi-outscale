// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"github.com/outscale-vbr/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func GetServerCertificates(ctx *pulumi.Context, args *GetServerCertificatesArgs, opts ...pulumi.InvokeOption) (*GetServerCertificatesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetServerCertificatesResult
	err := ctx.Invoke("outscale:index/getServerCertificates:getServerCertificates", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServerCertificates.
type GetServerCertificatesArgs struct {
	Filters []GetServerCertificatesFilter `pulumi:"filters"`
}

// A collection of values returned by getServerCertificates.
type GetServerCertificatesResult struct {
	Filters []GetServerCertificatesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                 string                                   `pulumi:"id"`
	RequestId          string                                   `pulumi:"requestId"`
	ServerCertificates []GetServerCertificatesServerCertificate `pulumi:"serverCertificates"`
}

func GetServerCertificatesOutput(ctx *pulumi.Context, args GetServerCertificatesOutputArgs, opts ...pulumi.InvokeOption) GetServerCertificatesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetServerCertificatesResult, error) {
			args := v.(GetServerCertificatesArgs)
			r, err := GetServerCertificates(ctx, &args, opts...)
			var s GetServerCertificatesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetServerCertificatesResultOutput)
}

// A collection of arguments for invoking getServerCertificates.
type GetServerCertificatesOutputArgs struct {
	Filters GetServerCertificatesFilterArrayInput `pulumi:"filters"`
}

func (GetServerCertificatesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerCertificatesArgs)(nil)).Elem()
}

// A collection of values returned by getServerCertificates.
type GetServerCertificatesResultOutput struct{ *pulumi.OutputState }

func (GetServerCertificatesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerCertificatesResult)(nil)).Elem()
}

func (o GetServerCertificatesResultOutput) ToGetServerCertificatesResultOutput() GetServerCertificatesResultOutput {
	return o
}

func (o GetServerCertificatesResultOutput) ToGetServerCertificatesResultOutputWithContext(ctx context.Context) GetServerCertificatesResultOutput {
	return o
}

func (o GetServerCertificatesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetServerCertificatesResult] {
	return pulumix.Output[GetServerCertificatesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetServerCertificatesResultOutput) Filters() GetServerCertificatesFilterArrayOutput {
	return o.ApplyT(func(v GetServerCertificatesResult) []GetServerCertificatesFilter { return v.Filters }).(GetServerCertificatesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetServerCertificatesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerCertificatesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServerCertificatesResultOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerCertificatesResult) string { return v.RequestId }).(pulumi.StringOutput)
}

func (o GetServerCertificatesResultOutput) ServerCertificates() GetServerCertificatesServerCertificateArrayOutput {
	return o.ApplyT(func(v GetServerCertificatesResult) []GetServerCertificatesServerCertificate {
		return v.ServerCertificates
	}).(GetServerCertificatesServerCertificateArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetServerCertificatesResultOutput{})
}
