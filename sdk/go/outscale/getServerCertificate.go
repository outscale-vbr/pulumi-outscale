// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"github.com/outscale-vbr/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func LookupServerCertificate(ctx *pulumi.Context, args *LookupServerCertificateArgs, opts ...pulumi.InvokeOption) (*LookupServerCertificateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServerCertificateResult
	err := ctx.Invoke("outscale:index/getServerCertificate:getServerCertificate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServerCertificate.
type LookupServerCertificateArgs struct {
	Filters []GetServerCertificateFilter `pulumi:"filters"`
}

// A collection of values returned by getServerCertificate.
type LookupServerCertificateResult struct {
	ExpirationDate string                       `pulumi:"expirationDate"`
	Filters        []GetServerCertificateFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	Name       string `pulumi:"name"`
	Orn        string `pulumi:"orn"`
	Path       string `pulumi:"path"`
	RequestId  string `pulumi:"requestId"`
	UploadDate string `pulumi:"uploadDate"`
}

func LookupServerCertificateOutput(ctx *pulumi.Context, args LookupServerCertificateOutputArgs, opts ...pulumi.InvokeOption) LookupServerCertificateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServerCertificateResult, error) {
			args := v.(LookupServerCertificateArgs)
			r, err := LookupServerCertificate(ctx, &args, opts...)
			var s LookupServerCertificateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupServerCertificateResultOutput)
}

// A collection of arguments for invoking getServerCertificate.
type LookupServerCertificateOutputArgs struct {
	Filters GetServerCertificateFilterArrayInput `pulumi:"filters"`
}

func (LookupServerCertificateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerCertificateArgs)(nil)).Elem()
}

// A collection of values returned by getServerCertificate.
type LookupServerCertificateResultOutput struct{ *pulumi.OutputState }

func (LookupServerCertificateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerCertificateResult)(nil)).Elem()
}

func (o LookupServerCertificateResultOutput) ToLookupServerCertificateResultOutput() LookupServerCertificateResultOutput {
	return o
}

func (o LookupServerCertificateResultOutput) ToLookupServerCertificateResultOutputWithContext(ctx context.Context) LookupServerCertificateResultOutput {
	return o
}

func (o LookupServerCertificateResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupServerCertificateResult] {
	return pulumix.Output[LookupServerCertificateResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupServerCertificateResultOutput) ExpirationDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerCertificateResult) string { return v.ExpirationDate }).(pulumi.StringOutput)
}

func (o LookupServerCertificateResultOutput) Filters() GetServerCertificateFilterArrayOutput {
	return o.ApplyT(func(v LookupServerCertificateResult) []GetServerCertificateFilter { return v.Filters }).(GetServerCertificateFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupServerCertificateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerCertificateResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupServerCertificateResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerCertificateResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupServerCertificateResultOutput) Orn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerCertificateResult) string { return v.Orn }).(pulumi.StringOutput)
}

func (o LookupServerCertificateResultOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerCertificateResult) string { return v.Path }).(pulumi.StringOutput)
}

func (o LookupServerCertificateResultOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerCertificateResult) string { return v.RequestId }).(pulumi.StringOutput)
}

func (o LookupServerCertificateResultOutput) UploadDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerCertificateResult) string { return v.UploadDate }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServerCertificateResultOutput{})
}
