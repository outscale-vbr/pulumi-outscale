// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"errors"
	"github.com/outscale-vbr/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type LoadBalancerPolicy struct {
	pulumi.CustomResourceState

	AccessLog                        LoadBalancerPolicyAccessLogOutput                           `pulumi:"accessLog"`
	ApplicationStickyCookiePolicies  LoadBalancerPolicyApplicationStickyCookiePolicyArrayOutput  `pulumi:"applicationStickyCookiePolicies"`
	BackendVmIds                     pulumi.StringArrayOutput                                    `pulumi:"backendVmIds"`
	CookieExpirationPeriod           pulumi.IntOutput                                            `pulumi:"cookieExpirationPeriod"`
	CookieName                       pulumi.StringOutput                                         `pulumi:"cookieName"`
	DnsName                          pulumi.StringOutput                                         `pulumi:"dnsName"`
	HealthCheck                      LoadBalancerPolicyHealthCheckOutput                         `pulumi:"healthCheck"`
	Listeners                        LoadBalancerPolicyListenerArrayOutput                       `pulumi:"listeners"`
	LoadBalancerName                 pulumi.StringOutput                                         `pulumi:"loadBalancerName"`
	LoadBalancerStickyCookiePolicies LoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayOutput `pulumi:"loadBalancerStickyCookiePolicies"`
	LoadBalancerType                 pulumi.StringOutput                                         `pulumi:"loadBalancerType"`
	NetId                            pulumi.StringOutput                                         `pulumi:"netId"`
	PolicyName                       pulumi.StringOutput                                         `pulumi:"policyName"`
	PolicyType                       pulumi.StringOutput                                         `pulumi:"policyType"`
	PublicIp                         pulumi.StringOutput                                         `pulumi:"publicIp"`
	RequestId                        pulumi.StringOutput                                         `pulumi:"requestId"`
	SecuredCookies                   pulumi.BoolOutput                                           `pulumi:"securedCookies"`
	SecurityGroups                   pulumi.StringArrayOutput                                    `pulumi:"securityGroups"`
	SourceSecurityGroup              LoadBalancerPolicySourceSecurityGroupOutput                 `pulumi:"sourceSecurityGroup"`
	Subnets                          pulumi.StringArrayOutput                                    `pulumi:"subnets"`
	SubregionNames                   pulumi.StringArrayOutput                                    `pulumi:"subregionNames"`
	Tags                             LoadBalancerPolicyTagArrayOutput                            `pulumi:"tags"`
}

// NewLoadBalancerPolicy registers a new resource with the given unique name, arguments, and options.
func NewLoadBalancerPolicy(ctx *pulumi.Context,
	name string, args *LoadBalancerPolicyArgs, opts ...pulumi.ResourceOption) (*LoadBalancerPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LoadBalancerName == nil {
		return nil, errors.New("invalid value for required argument 'LoadBalancerName'")
	}
	if args.PolicyName == nil {
		return nil, errors.New("invalid value for required argument 'PolicyName'")
	}
	if args.PolicyType == nil {
		return nil, errors.New("invalid value for required argument 'PolicyType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LoadBalancerPolicy
	err := ctx.RegisterResource("outscale:index/loadBalancerPolicy:LoadBalancerPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoadBalancerPolicy gets an existing LoadBalancerPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoadBalancerPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoadBalancerPolicyState, opts ...pulumi.ResourceOption) (*LoadBalancerPolicy, error) {
	var resource LoadBalancerPolicy
	err := ctx.ReadResource("outscale:index/loadBalancerPolicy:LoadBalancerPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoadBalancerPolicy resources.
type loadBalancerPolicyState struct {
	AccessLog                        *LoadBalancerPolicyAccessLog                       `pulumi:"accessLog"`
	ApplicationStickyCookiePolicies  []LoadBalancerPolicyApplicationStickyCookiePolicy  `pulumi:"applicationStickyCookiePolicies"`
	BackendVmIds                     []string                                           `pulumi:"backendVmIds"`
	CookieExpirationPeriod           *int                                               `pulumi:"cookieExpirationPeriod"`
	CookieName                       *string                                            `pulumi:"cookieName"`
	DnsName                          *string                                            `pulumi:"dnsName"`
	HealthCheck                      *LoadBalancerPolicyHealthCheck                     `pulumi:"healthCheck"`
	Listeners                        []LoadBalancerPolicyListener                       `pulumi:"listeners"`
	LoadBalancerName                 *string                                            `pulumi:"loadBalancerName"`
	LoadBalancerStickyCookiePolicies []LoadBalancerPolicyLoadBalancerStickyCookiePolicy `pulumi:"loadBalancerStickyCookiePolicies"`
	LoadBalancerType                 *string                                            `pulumi:"loadBalancerType"`
	NetId                            *string                                            `pulumi:"netId"`
	PolicyName                       *string                                            `pulumi:"policyName"`
	PolicyType                       *string                                            `pulumi:"policyType"`
	PublicIp                         *string                                            `pulumi:"publicIp"`
	RequestId                        *string                                            `pulumi:"requestId"`
	SecuredCookies                   *bool                                              `pulumi:"securedCookies"`
	SecurityGroups                   []string                                           `pulumi:"securityGroups"`
	SourceSecurityGroup              *LoadBalancerPolicySourceSecurityGroup             `pulumi:"sourceSecurityGroup"`
	Subnets                          []string                                           `pulumi:"subnets"`
	SubregionNames                   []string                                           `pulumi:"subregionNames"`
	Tags                             []LoadBalancerPolicyTag                            `pulumi:"tags"`
}

type LoadBalancerPolicyState struct {
	AccessLog                        LoadBalancerPolicyAccessLogPtrInput
	ApplicationStickyCookiePolicies  LoadBalancerPolicyApplicationStickyCookiePolicyArrayInput
	BackendVmIds                     pulumi.StringArrayInput
	CookieExpirationPeriod           pulumi.IntPtrInput
	CookieName                       pulumi.StringPtrInput
	DnsName                          pulumi.StringPtrInput
	HealthCheck                      LoadBalancerPolicyHealthCheckPtrInput
	Listeners                        LoadBalancerPolicyListenerArrayInput
	LoadBalancerName                 pulumi.StringPtrInput
	LoadBalancerStickyCookiePolicies LoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayInput
	LoadBalancerType                 pulumi.StringPtrInput
	NetId                            pulumi.StringPtrInput
	PolicyName                       pulumi.StringPtrInput
	PolicyType                       pulumi.StringPtrInput
	PublicIp                         pulumi.StringPtrInput
	RequestId                        pulumi.StringPtrInput
	SecuredCookies                   pulumi.BoolPtrInput
	SecurityGroups                   pulumi.StringArrayInput
	SourceSecurityGroup              LoadBalancerPolicySourceSecurityGroupPtrInput
	Subnets                          pulumi.StringArrayInput
	SubregionNames                   pulumi.StringArrayInput
	Tags                             LoadBalancerPolicyTagArrayInput
}

func (LoadBalancerPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerPolicyState)(nil)).Elem()
}

type loadBalancerPolicyArgs struct {
	BackendVmIds           []string                `pulumi:"backendVmIds"`
	CookieExpirationPeriod *int                    `pulumi:"cookieExpirationPeriod"`
	CookieName             *string                 `pulumi:"cookieName"`
	LoadBalancerName       string                  `pulumi:"loadBalancerName"`
	LoadBalancerType       *string                 `pulumi:"loadBalancerType"`
	PolicyName             string                  `pulumi:"policyName"`
	PolicyType             string                  `pulumi:"policyType"`
	SecurityGroups         []string                `pulumi:"securityGroups"`
	Subnets                []string                `pulumi:"subnets"`
	SubregionNames         []string                `pulumi:"subregionNames"`
	Tags                   []LoadBalancerPolicyTag `pulumi:"tags"`
}

// The set of arguments for constructing a LoadBalancerPolicy resource.
type LoadBalancerPolicyArgs struct {
	BackendVmIds           pulumi.StringArrayInput
	CookieExpirationPeriod pulumi.IntPtrInput
	CookieName             pulumi.StringPtrInput
	LoadBalancerName       pulumi.StringInput
	LoadBalancerType       pulumi.StringPtrInput
	PolicyName             pulumi.StringInput
	PolicyType             pulumi.StringInput
	SecurityGroups         pulumi.StringArrayInput
	Subnets                pulumi.StringArrayInput
	SubregionNames         pulumi.StringArrayInput
	Tags                   LoadBalancerPolicyTagArrayInput
}

func (LoadBalancerPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerPolicyArgs)(nil)).Elem()
}

type LoadBalancerPolicyInput interface {
	pulumi.Input

	ToLoadBalancerPolicyOutput() LoadBalancerPolicyOutput
	ToLoadBalancerPolicyOutputWithContext(ctx context.Context) LoadBalancerPolicyOutput
}

func (*LoadBalancerPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerPolicy)(nil)).Elem()
}

func (i *LoadBalancerPolicy) ToLoadBalancerPolicyOutput() LoadBalancerPolicyOutput {
	return i.ToLoadBalancerPolicyOutputWithContext(context.Background())
}

func (i *LoadBalancerPolicy) ToLoadBalancerPolicyOutputWithContext(ctx context.Context) LoadBalancerPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPolicyOutput)
}

func (i *LoadBalancerPolicy) ToOutput(ctx context.Context) pulumix.Output[*LoadBalancerPolicy] {
	return pulumix.Output[*LoadBalancerPolicy]{
		OutputState: i.ToLoadBalancerPolicyOutputWithContext(ctx).OutputState,
	}
}

// LoadBalancerPolicyArrayInput is an input type that accepts LoadBalancerPolicyArray and LoadBalancerPolicyArrayOutput values.
// You can construct a concrete instance of `LoadBalancerPolicyArrayInput` via:
//
//	LoadBalancerPolicyArray{ LoadBalancerPolicyArgs{...} }
type LoadBalancerPolicyArrayInput interface {
	pulumi.Input

	ToLoadBalancerPolicyArrayOutput() LoadBalancerPolicyArrayOutput
	ToLoadBalancerPolicyArrayOutputWithContext(context.Context) LoadBalancerPolicyArrayOutput
}

type LoadBalancerPolicyArray []LoadBalancerPolicyInput

func (LoadBalancerPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoadBalancerPolicy)(nil)).Elem()
}

func (i LoadBalancerPolicyArray) ToLoadBalancerPolicyArrayOutput() LoadBalancerPolicyArrayOutput {
	return i.ToLoadBalancerPolicyArrayOutputWithContext(context.Background())
}

func (i LoadBalancerPolicyArray) ToLoadBalancerPolicyArrayOutputWithContext(ctx context.Context) LoadBalancerPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPolicyArrayOutput)
}

func (i LoadBalancerPolicyArray) ToOutput(ctx context.Context) pulumix.Output[[]*LoadBalancerPolicy] {
	return pulumix.Output[[]*LoadBalancerPolicy]{
		OutputState: i.ToLoadBalancerPolicyArrayOutputWithContext(ctx).OutputState,
	}
}

// LoadBalancerPolicyMapInput is an input type that accepts LoadBalancerPolicyMap and LoadBalancerPolicyMapOutput values.
// You can construct a concrete instance of `LoadBalancerPolicyMapInput` via:
//
//	LoadBalancerPolicyMap{ "key": LoadBalancerPolicyArgs{...} }
type LoadBalancerPolicyMapInput interface {
	pulumi.Input

	ToLoadBalancerPolicyMapOutput() LoadBalancerPolicyMapOutput
	ToLoadBalancerPolicyMapOutputWithContext(context.Context) LoadBalancerPolicyMapOutput
}

type LoadBalancerPolicyMap map[string]LoadBalancerPolicyInput

func (LoadBalancerPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoadBalancerPolicy)(nil)).Elem()
}

func (i LoadBalancerPolicyMap) ToLoadBalancerPolicyMapOutput() LoadBalancerPolicyMapOutput {
	return i.ToLoadBalancerPolicyMapOutputWithContext(context.Background())
}

func (i LoadBalancerPolicyMap) ToLoadBalancerPolicyMapOutputWithContext(ctx context.Context) LoadBalancerPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerPolicyMapOutput)
}

func (i LoadBalancerPolicyMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*LoadBalancerPolicy] {
	return pulumix.Output[map[string]*LoadBalancerPolicy]{
		OutputState: i.ToLoadBalancerPolicyMapOutputWithContext(ctx).OutputState,
	}
}

type LoadBalancerPolicyOutput struct{ *pulumi.OutputState }

func (LoadBalancerPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerPolicy)(nil)).Elem()
}

func (o LoadBalancerPolicyOutput) ToLoadBalancerPolicyOutput() LoadBalancerPolicyOutput {
	return o
}

func (o LoadBalancerPolicyOutput) ToLoadBalancerPolicyOutputWithContext(ctx context.Context) LoadBalancerPolicyOutput {
	return o
}

func (o LoadBalancerPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[*LoadBalancerPolicy] {
	return pulumix.Output[*LoadBalancerPolicy]{
		OutputState: o.OutputState,
	}
}

func (o LoadBalancerPolicyOutput) AccessLog() LoadBalancerPolicyAccessLogOutput {
	return o.ApplyT(func(v *LoadBalancerPolicy) LoadBalancerPolicyAccessLogOutput { return v.AccessLog }).(LoadBalancerPolicyAccessLogOutput)
}

func (o LoadBalancerPolicyOutput) ApplicationStickyCookiePolicies() LoadBalancerPolicyApplicationStickyCookiePolicyArrayOutput {
	return o.ApplyT(func(v *LoadBalancerPolicy) LoadBalancerPolicyApplicationStickyCookiePolicyArrayOutput {
		return v.ApplicationStickyCookiePolicies
	}).(LoadBalancerPolicyApplicationStickyCookiePolicyArrayOutput)
}

func (o LoadBalancerPolicyOutput) BackendVmIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LoadBalancerPolicy) pulumi.StringArrayOutput { return v.BackendVmIds }).(pulumi.StringArrayOutput)
}

func (o LoadBalancerPolicyOutput) CookieExpirationPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v *LoadBalancerPolicy) pulumi.IntOutput { return v.CookieExpirationPeriod }).(pulumi.IntOutput)
}

func (o LoadBalancerPolicyOutput) CookieName() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancerPolicy) pulumi.StringOutput { return v.CookieName }).(pulumi.StringOutput)
}

func (o LoadBalancerPolicyOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancerPolicy) pulumi.StringOutput { return v.DnsName }).(pulumi.StringOutput)
}

func (o LoadBalancerPolicyOutput) HealthCheck() LoadBalancerPolicyHealthCheckOutput {
	return o.ApplyT(func(v *LoadBalancerPolicy) LoadBalancerPolicyHealthCheckOutput { return v.HealthCheck }).(LoadBalancerPolicyHealthCheckOutput)
}

func (o LoadBalancerPolicyOutput) Listeners() LoadBalancerPolicyListenerArrayOutput {
	return o.ApplyT(func(v *LoadBalancerPolicy) LoadBalancerPolicyListenerArrayOutput { return v.Listeners }).(LoadBalancerPolicyListenerArrayOutput)
}

func (o LoadBalancerPolicyOutput) LoadBalancerName() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancerPolicy) pulumi.StringOutput { return v.LoadBalancerName }).(pulumi.StringOutput)
}

func (o LoadBalancerPolicyOutput) LoadBalancerStickyCookiePolicies() LoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayOutput {
	return o.ApplyT(func(v *LoadBalancerPolicy) LoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayOutput {
		return v.LoadBalancerStickyCookiePolicies
	}).(LoadBalancerPolicyLoadBalancerStickyCookiePolicyArrayOutput)
}

func (o LoadBalancerPolicyOutput) LoadBalancerType() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancerPolicy) pulumi.StringOutput { return v.LoadBalancerType }).(pulumi.StringOutput)
}

func (o LoadBalancerPolicyOutput) NetId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancerPolicy) pulumi.StringOutput { return v.NetId }).(pulumi.StringOutput)
}

func (o LoadBalancerPolicyOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancerPolicy) pulumi.StringOutput { return v.PolicyName }).(pulumi.StringOutput)
}

func (o LoadBalancerPolicyOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancerPolicy) pulumi.StringOutput { return v.PolicyType }).(pulumi.StringOutput)
}

func (o LoadBalancerPolicyOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancerPolicy) pulumi.StringOutput { return v.PublicIp }).(pulumi.StringOutput)
}

func (o LoadBalancerPolicyOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancerPolicy) pulumi.StringOutput { return v.RequestId }).(pulumi.StringOutput)
}

func (o LoadBalancerPolicyOutput) SecuredCookies() pulumi.BoolOutput {
	return o.ApplyT(func(v *LoadBalancerPolicy) pulumi.BoolOutput { return v.SecuredCookies }).(pulumi.BoolOutput)
}

func (o LoadBalancerPolicyOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LoadBalancerPolicy) pulumi.StringArrayOutput { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o LoadBalancerPolicyOutput) SourceSecurityGroup() LoadBalancerPolicySourceSecurityGroupOutput {
	return o.ApplyT(func(v *LoadBalancerPolicy) LoadBalancerPolicySourceSecurityGroupOutput { return v.SourceSecurityGroup }).(LoadBalancerPolicySourceSecurityGroupOutput)
}

func (o LoadBalancerPolicyOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LoadBalancerPolicy) pulumi.StringArrayOutput { return v.Subnets }).(pulumi.StringArrayOutput)
}

func (o LoadBalancerPolicyOutput) SubregionNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LoadBalancerPolicy) pulumi.StringArrayOutput { return v.SubregionNames }).(pulumi.StringArrayOutput)
}

func (o LoadBalancerPolicyOutput) Tags() LoadBalancerPolicyTagArrayOutput {
	return o.ApplyT(func(v *LoadBalancerPolicy) LoadBalancerPolicyTagArrayOutput { return v.Tags }).(LoadBalancerPolicyTagArrayOutput)
}

type LoadBalancerPolicyArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoadBalancerPolicy)(nil)).Elem()
}

func (o LoadBalancerPolicyArrayOutput) ToLoadBalancerPolicyArrayOutput() LoadBalancerPolicyArrayOutput {
	return o
}

func (o LoadBalancerPolicyArrayOutput) ToLoadBalancerPolicyArrayOutputWithContext(ctx context.Context) LoadBalancerPolicyArrayOutput {
	return o
}

func (o LoadBalancerPolicyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*LoadBalancerPolicy] {
	return pulumix.Output[[]*LoadBalancerPolicy]{
		OutputState: o.OutputState,
	}
}

func (o LoadBalancerPolicyArrayOutput) Index(i pulumi.IntInput) LoadBalancerPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LoadBalancerPolicy {
		return vs[0].([]*LoadBalancerPolicy)[vs[1].(int)]
	}).(LoadBalancerPolicyOutput)
}

type LoadBalancerPolicyMapOutput struct{ *pulumi.OutputState }

func (LoadBalancerPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoadBalancerPolicy)(nil)).Elem()
}

func (o LoadBalancerPolicyMapOutput) ToLoadBalancerPolicyMapOutput() LoadBalancerPolicyMapOutput {
	return o
}

func (o LoadBalancerPolicyMapOutput) ToLoadBalancerPolicyMapOutputWithContext(ctx context.Context) LoadBalancerPolicyMapOutput {
	return o
}

func (o LoadBalancerPolicyMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*LoadBalancerPolicy] {
	return pulumix.Output[map[string]*LoadBalancerPolicy]{
		OutputState: o.OutputState,
	}
}

func (o LoadBalancerPolicyMapOutput) MapIndex(k pulumi.StringInput) LoadBalancerPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LoadBalancerPolicy {
		return vs[0].(map[string]*LoadBalancerPolicy)[vs[1].(string)]
	}).(LoadBalancerPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPolicyInput)(nil)).Elem(), &LoadBalancerPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPolicyArrayInput)(nil)).Elem(), LoadBalancerPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPolicyMapInput)(nil)).Elem(), LoadBalancerPolicyMap{})
	pulumi.RegisterOutputType(LoadBalancerPolicyOutput{})
	pulumi.RegisterOutputType(LoadBalancerPolicyArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerPolicyMapOutput{})
}
