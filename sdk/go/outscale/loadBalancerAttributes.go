// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package outscale

import (
	"context"
	"reflect"

	"errors"
	"github.com/outscale-vbr/pulumi-outscale/sdk/go/outscale/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type LoadBalancerAttributes struct {
	pulumi.CustomResourceState

	AccessLog                        LoadBalancerAttributesAccessLogOutput                           `pulumi:"accessLog"`
	ApplicationStickyCookiePolicies  LoadBalancerAttributesApplicationStickyCookiePolicyArrayOutput  `pulumi:"applicationStickyCookiePolicies"`
	BackendVmIds                     pulumi.StringArrayOutput                                        `pulumi:"backendVmIds"`
	DnsName                          pulumi.StringOutput                                             `pulumi:"dnsName"`
	HealthCheck                      LoadBalancerAttributesHealthCheckOutput                         `pulumi:"healthCheck"`
	Listeners                        LoadBalancerAttributesListenerArrayOutput                       `pulumi:"listeners"`
	LoadBalancerName                 pulumi.StringOutput                                             `pulumi:"loadBalancerName"`
	LoadBalancerPort                 pulumi.IntPtrOutput                                             `pulumi:"loadBalancerPort"`
	LoadBalancerStickyCookiePolicies LoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayOutput `pulumi:"loadBalancerStickyCookiePolicies"`
	LoadBalancerType                 pulumi.StringOutput                                             `pulumi:"loadBalancerType"`
	PolicyNames                      pulumi.StringArrayOutput                                        `pulumi:"policyNames"`
	RequestId                        pulumi.StringOutput                                             `pulumi:"requestId"`
	SecurityGroups                   pulumi.StringArrayOutput                                        `pulumi:"securityGroups"`
	ServerCertificateId              pulumi.StringPtrOutput                                          `pulumi:"serverCertificateId"`
	SourceSecurityGroup              LoadBalancerAttributesSourceSecurityGroupOutput                 `pulumi:"sourceSecurityGroup"`
	Subnets                          pulumi.StringArrayOutput                                        `pulumi:"subnets"`
	SubregionNames                   pulumi.StringArrayOutput                                        `pulumi:"subregionNames"`
	Tags                             LoadBalancerAttributesTagArrayOutput                            `pulumi:"tags"`
}

// NewLoadBalancerAttributes registers a new resource with the given unique name, arguments, and options.
func NewLoadBalancerAttributes(ctx *pulumi.Context,
	name string, args *LoadBalancerAttributesArgs, opts ...pulumi.ResourceOption) (*LoadBalancerAttributes, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LoadBalancerName == nil {
		return nil, errors.New("invalid value for required argument 'LoadBalancerName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LoadBalancerAttributes
	err := ctx.RegisterResource("outscale:index/loadBalancerAttributes:LoadBalancerAttributes", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoadBalancerAttributes gets an existing LoadBalancerAttributes resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoadBalancerAttributes(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoadBalancerAttributesState, opts ...pulumi.ResourceOption) (*LoadBalancerAttributes, error) {
	var resource LoadBalancerAttributes
	err := ctx.ReadResource("outscale:index/loadBalancerAttributes:LoadBalancerAttributes", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoadBalancerAttributes resources.
type loadBalancerAttributesState struct {
	AccessLog                        *LoadBalancerAttributesAccessLog                       `pulumi:"accessLog"`
	ApplicationStickyCookiePolicies  []LoadBalancerAttributesApplicationStickyCookiePolicy  `pulumi:"applicationStickyCookiePolicies"`
	BackendVmIds                     []string                                               `pulumi:"backendVmIds"`
	DnsName                          *string                                                `pulumi:"dnsName"`
	HealthCheck                      *LoadBalancerAttributesHealthCheck                     `pulumi:"healthCheck"`
	Listeners                        []LoadBalancerAttributesListener                       `pulumi:"listeners"`
	LoadBalancerName                 *string                                                `pulumi:"loadBalancerName"`
	LoadBalancerPort                 *int                                                   `pulumi:"loadBalancerPort"`
	LoadBalancerStickyCookiePolicies []LoadBalancerAttributesLoadBalancerStickyCookiePolicy `pulumi:"loadBalancerStickyCookiePolicies"`
	LoadBalancerType                 *string                                                `pulumi:"loadBalancerType"`
	PolicyNames                      []string                                               `pulumi:"policyNames"`
	RequestId                        *string                                                `pulumi:"requestId"`
	SecurityGroups                   []string                                               `pulumi:"securityGroups"`
	ServerCertificateId              *string                                                `pulumi:"serverCertificateId"`
	SourceSecurityGroup              *LoadBalancerAttributesSourceSecurityGroup             `pulumi:"sourceSecurityGroup"`
	Subnets                          []string                                               `pulumi:"subnets"`
	SubregionNames                   []string                                               `pulumi:"subregionNames"`
	Tags                             []LoadBalancerAttributesTag                            `pulumi:"tags"`
}

type LoadBalancerAttributesState struct {
	AccessLog                        LoadBalancerAttributesAccessLogPtrInput
	ApplicationStickyCookiePolicies  LoadBalancerAttributesApplicationStickyCookiePolicyArrayInput
	BackendVmIds                     pulumi.StringArrayInput
	DnsName                          pulumi.StringPtrInput
	HealthCheck                      LoadBalancerAttributesHealthCheckPtrInput
	Listeners                        LoadBalancerAttributesListenerArrayInput
	LoadBalancerName                 pulumi.StringPtrInput
	LoadBalancerPort                 pulumi.IntPtrInput
	LoadBalancerStickyCookiePolicies LoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayInput
	LoadBalancerType                 pulumi.StringPtrInput
	PolicyNames                      pulumi.StringArrayInput
	RequestId                        pulumi.StringPtrInput
	SecurityGroups                   pulumi.StringArrayInput
	ServerCertificateId              pulumi.StringPtrInput
	SourceSecurityGroup              LoadBalancerAttributesSourceSecurityGroupPtrInput
	Subnets                          pulumi.StringArrayInput
	SubregionNames                   pulumi.StringArrayInput
	Tags                             LoadBalancerAttributesTagArrayInput
}

func (LoadBalancerAttributesState) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerAttributesState)(nil)).Elem()
}

type loadBalancerAttributesArgs struct {
	AccessLog           *LoadBalancerAttributesAccessLog   `pulumi:"accessLog"`
	HealthCheck         *LoadBalancerAttributesHealthCheck `pulumi:"healthCheck"`
	LoadBalancerName    string                             `pulumi:"loadBalancerName"`
	LoadBalancerPort    *int                               `pulumi:"loadBalancerPort"`
	PolicyNames         []string                           `pulumi:"policyNames"`
	ServerCertificateId *string                            `pulumi:"serverCertificateId"`
	Tags                []LoadBalancerAttributesTag        `pulumi:"tags"`
}

// The set of arguments for constructing a LoadBalancerAttributes resource.
type LoadBalancerAttributesArgs struct {
	AccessLog           LoadBalancerAttributesAccessLogPtrInput
	HealthCheck         LoadBalancerAttributesHealthCheckPtrInput
	LoadBalancerName    pulumi.StringInput
	LoadBalancerPort    pulumi.IntPtrInput
	PolicyNames         pulumi.StringArrayInput
	ServerCertificateId pulumi.StringPtrInput
	Tags                LoadBalancerAttributesTagArrayInput
}

func (LoadBalancerAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerAttributesArgs)(nil)).Elem()
}

type LoadBalancerAttributesInput interface {
	pulumi.Input

	ToLoadBalancerAttributesOutput() LoadBalancerAttributesOutput
	ToLoadBalancerAttributesOutputWithContext(ctx context.Context) LoadBalancerAttributesOutput
}

func (*LoadBalancerAttributes) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerAttributes)(nil)).Elem()
}

func (i *LoadBalancerAttributes) ToLoadBalancerAttributesOutput() LoadBalancerAttributesOutput {
	return i.ToLoadBalancerAttributesOutputWithContext(context.Background())
}

func (i *LoadBalancerAttributes) ToLoadBalancerAttributesOutputWithContext(ctx context.Context) LoadBalancerAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAttributesOutput)
}

func (i *LoadBalancerAttributes) ToOutput(ctx context.Context) pulumix.Output[*LoadBalancerAttributes] {
	return pulumix.Output[*LoadBalancerAttributes]{
		OutputState: i.ToLoadBalancerAttributesOutputWithContext(ctx).OutputState,
	}
}

// LoadBalancerAttributesArrayInput is an input type that accepts LoadBalancerAttributesArray and LoadBalancerAttributesArrayOutput values.
// You can construct a concrete instance of `LoadBalancerAttributesArrayInput` via:
//
//	LoadBalancerAttributesArray{ LoadBalancerAttributesArgs{...} }
type LoadBalancerAttributesArrayInput interface {
	pulumi.Input

	ToLoadBalancerAttributesArrayOutput() LoadBalancerAttributesArrayOutput
	ToLoadBalancerAttributesArrayOutputWithContext(context.Context) LoadBalancerAttributesArrayOutput
}

type LoadBalancerAttributesArray []LoadBalancerAttributesInput

func (LoadBalancerAttributesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoadBalancerAttributes)(nil)).Elem()
}

func (i LoadBalancerAttributesArray) ToLoadBalancerAttributesArrayOutput() LoadBalancerAttributesArrayOutput {
	return i.ToLoadBalancerAttributesArrayOutputWithContext(context.Background())
}

func (i LoadBalancerAttributesArray) ToLoadBalancerAttributesArrayOutputWithContext(ctx context.Context) LoadBalancerAttributesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAttributesArrayOutput)
}

func (i LoadBalancerAttributesArray) ToOutput(ctx context.Context) pulumix.Output[[]*LoadBalancerAttributes] {
	return pulumix.Output[[]*LoadBalancerAttributes]{
		OutputState: i.ToLoadBalancerAttributesArrayOutputWithContext(ctx).OutputState,
	}
}

// LoadBalancerAttributesMapInput is an input type that accepts LoadBalancerAttributesMap and LoadBalancerAttributesMapOutput values.
// You can construct a concrete instance of `LoadBalancerAttributesMapInput` via:
//
//	LoadBalancerAttributesMap{ "key": LoadBalancerAttributesArgs{...} }
type LoadBalancerAttributesMapInput interface {
	pulumi.Input

	ToLoadBalancerAttributesMapOutput() LoadBalancerAttributesMapOutput
	ToLoadBalancerAttributesMapOutputWithContext(context.Context) LoadBalancerAttributesMapOutput
}

type LoadBalancerAttributesMap map[string]LoadBalancerAttributesInput

func (LoadBalancerAttributesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoadBalancerAttributes)(nil)).Elem()
}

func (i LoadBalancerAttributesMap) ToLoadBalancerAttributesMapOutput() LoadBalancerAttributesMapOutput {
	return i.ToLoadBalancerAttributesMapOutputWithContext(context.Background())
}

func (i LoadBalancerAttributesMap) ToLoadBalancerAttributesMapOutputWithContext(ctx context.Context) LoadBalancerAttributesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAttributesMapOutput)
}

func (i LoadBalancerAttributesMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*LoadBalancerAttributes] {
	return pulumix.Output[map[string]*LoadBalancerAttributes]{
		OutputState: i.ToLoadBalancerAttributesMapOutputWithContext(ctx).OutputState,
	}
}

type LoadBalancerAttributesOutput struct{ *pulumi.OutputState }

func (LoadBalancerAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerAttributes)(nil)).Elem()
}

func (o LoadBalancerAttributesOutput) ToLoadBalancerAttributesOutput() LoadBalancerAttributesOutput {
	return o
}

func (o LoadBalancerAttributesOutput) ToLoadBalancerAttributesOutputWithContext(ctx context.Context) LoadBalancerAttributesOutput {
	return o
}

func (o LoadBalancerAttributesOutput) ToOutput(ctx context.Context) pulumix.Output[*LoadBalancerAttributes] {
	return pulumix.Output[*LoadBalancerAttributes]{
		OutputState: o.OutputState,
	}
}

func (o LoadBalancerAttributesOutput) AccessLog() LoadBalancerAttributesAccessLogOutput {
	return o.ApplyT(func(v *LoadBalancerAttributes) LoadBalancerAttributesAccessLogOutput { return v.AccessLog }).(LoadBalancerAttributesAccessLogOutput)
}

func (o LoadBalancerAttributesOutput) ApplicationStickyCookiePolicies() LoadBalancerAttributesApplicationStickyCookiePolicyArrayOutput {
	return o.ApplyT(func(v *LoadBalancerAttributes) LoadBalancerAttributesApplicationStickyCookiePolicyArrayOutput {
		return v.ApplicationStickyCookiePolicies
	}).(LoadBalancerAttributesApplicationStickyCookiePolicyArrayOutput)
}

func (o LoadBalancerAttributesOutput) BackendVmIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LoadBalancerAttributes) pulumi.StringArrayOutput { return v.BackendVmIds }).(pulumi.StringArrayOutput)
}

func (o LoadBalancerAttributesOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancerAttributes) pulumi.StringOutput { return v.DnsName }).(pulumi.StringOutput)
}

func (o LoadBalancerAttributesOutput) HealthCheck() LoadBalancerAttributesHealthCheckOutput {
	return o.ApplyT(func(v *LoadBalancerAttributes) LoadBalancerAttributesHealthCheckOutput { return v.HealthCheck }).(LoadBalancerAttributesHealthCheckOutput)
}

func (o LoadBalancerAttributesOutput) Listeners() LoadBalancerAttributesListenerArrayOutput {
	return o.ApplyT(func(v *LoadBalancerAttributes) LoadBalancerAttributesListenerArrayOutput { return v.Listeners }).(LoadBalancerAttributesListenerArrayOutput)
}

func (o LoadBalancerAttributesOutput) LoadBalancerName() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancerAttributes) pulumi.StringOutput { return v.LoadBalancerName }).(pulumi.StringOutput)
}

func (o LoadBalancerAttributesOutput) LoadBalancerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancerAttributes) pulumi.IntPtrOutput { return v.LoadBalancerPort }).(pulumi.IntPtrOutput)
}

func (o LoadBalancerAttributesOutput) LoadBalancerStickyCookiePolicies() LoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayOutput {
	return o.ApplyT(func(v *LoadBalancerAttributes) LoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayOutput {
		return v.LoadBalancerStickyCookiePolicies
	}).(LoadBalancerAttributesLoadBalancerStickyCookiePolicyArrayOutput)
}

func (o LoadBalancerAttributesOutput) LoadBalancerType() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancerAttributes) pulumi.StringOutput { return v.LoadBalancerType }).(pulumi.StringOutput)
}

func (o LoadBalancerAttributesOutput) PolicyNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LoadBalancerAttributes) pulumi.StringArrayOutput { return v.PolicyNames }).(pulumi.StringArrayOutput)
}

func (o LoadBalancerAttributesOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v *LoadBalancerAttributes) pulumi.StringOutput { return v.RequestId }).(pulumi.StringOutput)
}

func (o LoadBalancerAttributesOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LoadBalancerAttributes) pulumi.StringArrayOutput { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o LoadBalancerAttributesOutput) ServerCertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerAttributes) pulumi.StringPtrOutput { return v.ServerCertificateId }).(pulumi.StringPtrOutput)
}

func (o LoadBalancerAttributesOutput) SourceSecurityGroup() LoadBalancerAttributesSourceSecurityGroupOutput {
	return o.ApplyT(func(v *LoadBalancerAttributes) LoadBalancerAttributesSourceSecurityGroupOutput {
		return v.SourceSecurityGroup
	}).(LoadBalancerAttributesSourceSecurityGroupOutput)
}

func (o LoadBalancerAttributesOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LoadBalancerAttributes) pulumi.StringArrayOutput { return v.Subnets }).(pulumi.StringArrayOutput)
}

func (o LoadBalancerAttributesOutput) SubregionNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LoadBalancerAttributes) pulumi.StringArrayOutput { return v.SubregionNames }).(pulumi.StringArrayOutput)
}

func (o LoadBalancerAttributesOutput) Tags() LoadBalancerAttributesTagArrayOutput {
	return o.ApplyT(func(v *LoadBalancerAttributes) LoadBalancerAttributesTagArrayOutput { return v.Tags }).(LoadBalancerAttributesTagArrayOutput)
}

type LoadBalancerAttributesArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerAttributesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LoadBalancerAttributes)(nil)).Elem()
}

func (o LoadBalancerAttributesArrayOutput) ToLoadBalancerAttributesArrayOutput() LoadBalancerAttributesArrayOutput {
	return o
}

func (o LoadBalancerAttributesArrayOutput) ToLoadBalancerAttributesArrayOutputWithContext(ctx context.Context) LoadBalancerAttributesArrayOutput {
	return o
}

func (o LoadBalancerAttributesArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*LoadBalancerAttributes] {
	return pulumix.Output[[]*LoadBalancerAttributes]{
		OutputState: o.OutputState,
	}
}

func (o LoadBalancerAttributesArrayOutput) Index(i pulumi.IntInput) LoadBalancerAttributesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LoadBalancerAttributes {
		return vs[0].([]*LoadBalancerAttributes)[vs[1].(int)]
	}).(LoadBalancerAttributesOutput)
}

type LoadBalancerAttributesMapOutput struct{ *pulumi.OutputState }

func (LoadBalancerAttributesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LoadBalancerAttributes)(nil)).Elem()
}

func (o LoadBalancerAttributesMapOutput) ToLoadBalancerAttributesMapOutput() LoadBalancerAttributesMapOutput {
	return o
}

func (o LoadBalancerAttributesMapOutput) ToLoadBalancerAttributesMapOutputWithContext(ctx context.Context) LoadBalancerAttributesMapOutput {
	return o
}

func (o LoadBalancerAttributesMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*LoadBalancerAttributes] {
	return pulumix.Output[map[string]*LoadBalancerAttributes]{
		OutputState: o.OutputState,
	}
}

func (o LoadBalancerAttributesMapOutput) MapIndex(k pulumi.StringInput) LoadBalancerAttributesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LoadBalancerAttributes {
		return vs[0].(map[string]*LoadBalancerAttributes)[vs[1].(string)]
	}).(LoadBalancerAttributesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerAttributesInput)(nil)).Elem(), &LoadBalancerAttributes{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerAttributesArrayInput)(nil)).Elem(), LoadBalancerAttributesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerAttributesMapInput)(nil)).Elem(), LoadBalancerAttributesMap{})
	pulumi.RegisterOutputType(LoadBalancerAttributesOutput{})
	pulumi.RegisterOutputType(LoadBalancerAttributesArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerAttributesMapOutput{})
}
